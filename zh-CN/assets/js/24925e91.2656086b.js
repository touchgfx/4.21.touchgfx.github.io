"use strict";(self.webpackChunktouchgfx_documentation=self.webpackChunktouchgfx_documentation||[]).push([[9652],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||r;return n?o.createElement(h,i(i({ref:t},p),{},{components:n})):o.createElement(h,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<r;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},70814:function(e,t,n){var o=n(67294),a=n(88678);const r=o.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},o.createElement("path",{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}));class i extends o.Component{render(){return o.createElement(a.Z,{color:"var(--highlight-color-caution)",header:"Caution",type:"caution",icon:r},this.props.children)}}t.Z=i},22425:function(e,t,n){var o=n(67294);class a extends o.Component{render(){return o.createElement("div",{className:"code-header"},o.createElement("div",null,o.createElement("h5",null,this.props.children)))}}t.Z=a},44035:function(e,t,n){var o=n(67294),a=n(25026);t.Z=function(e){const t=e.noShadow||!1,n=e.width,r=e.height,i=(0,a.Z)(e.imageSource);return t?o.createElement("div",{className:"figure noshadow"},o.createElement("a",{href:i,target:"_blank"},o.createElement("img",{width:n,height:r,src:i})),o.createElement("p",null,e.children)):o.createElement("div",{className:"figure"},o.createElement("a",{href:i,target:"_blank"},o.createElement("img",{width:n,height:r,src:i})),o.createElement("p",null,e.children))}},29415:function(e,t,n){var o=n(67294),a=n(88678);const r=o.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},o.createElement("path",{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}));class i extends o.Component{render(){return o.createElement(a.Z,{color:"var(--highlight-color-further-reading)",header:"Further reading",type:"further-reading",icon:r},this.props.children)}}t.Z=i},88678:function(e,t,n){var o=n(67294);class a extends o.Component{render(){const e=`highlight highlight-${this.props.type}`;return o.createElement("div",{className:e},o.createElement("div",{className:"highlight-heading"},o.createElement("h5",null,o.createElement("div",{className:"highlight-icon"},this.props.icon),this.props.header)),o.createElement("div",{className:"highlight-content"},this.props.children))}}t.Z=a},93054:function(e,t,n){var o=n(67294),a=n(88678);const r=o.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},o.createElement("path",{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}));class i extends o.Component{render(){return o.createElement(a.Z,{color:"var(--highlight-color-note)",header:"Note",type:"note",icon:r},this.props.children)}}t.Z=i},37793:function(e,t,n){var o=n(67294),a=n(88678);const r=o.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},o.createElement("path",{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}));class i extends o.Component{render(){return o.createElement(a.Z,{color:"var(--highlight-color-tip)",header:"Tip",type:"tip",icon:r},this.props.children)}}t.Z=i},93359:function(e,t,n){n.r(t),n.d(t,{assets:function(){return M},contentTitle:function(){return v},default:function(){return $},frontMatter:function(){return b},metadata:function(){return T},toc:function(){return S}});var o=n(3905),a=n(44035),r=n(29415),i=n(93054),s=n(37793),l=n(22425),c=n(39130),p=n(70814),d=Object.defineProperty,u=Object.defineProperties,m=Object.getOwnPropertyDescriptors,h=Object.getOwnPropertySymbols,g=Object.prototype.hasOwnProperty,_=Object.prototype.propertyIsEnumerable,f=(e,t,n)=>t in e?d(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,k=(e,t)=>{for(var n in t||(t={}))g.call(t,n)&&f(e,n,t[n]);if(h)for(var n of h(t))_.call(t,n)&&f(e,n,t[n]);return e};const b={id:"scenarios-video-decoding",title:"\u89c6\u9891\u89e3\u7801"},v=void 0,T={unversionedId:"development/touchgfx-hal-development/scenarios/scenarios-video-decoding",id:"development/touchgfx-hal-development/scenarios/scenarios-video-decoding",title:"\u89c6\u9891\u89e3\u7801",description:"",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/development/touchgfx-hal-development/scenarios/scenarios-video-decoding.mdx",sourceDirName:"development/touchgfx-hal-development/scenarios",slug:"/development/touchgfx-hal-development/scenarios/scenarios-video-decoding",permalink:"/4.21/zh-CN/docs/development/touchgfx-hal-development/scenarios/scenarios-video-decoding",draft:!1,tags:[],version:"current",frontMatter:{id:"scenarios-video-decoding",title:"\u89c6\u9891\u89e3\u7801"},sidebar:"docs",previous:{title:"Real Time Operating System",permalink:"/4.21/zh-CN/docs/development/touchgfx-hal-development/scenarios/scenarios-configure-rtos"},next:{title:"MIPI-DSI Video Mode",permalink:"/4.21/zh-CN/docs/development/touchgfx-hal-development/scenarios/scenarios-dsi-video-mode"}},M={},S=[{value:"\u652f\u6301RTOS",id:"video-rtos-support",level:2},{value:"\u8f6f\u4ef6\u89e3\u7801",id:"software-decoding",level:2},{value:"\u89c6\u9891\u6570\u636e",id:"video-data",level:3},{value:"\u786c\u4ef6\u89e3\u7801",id:"hardware-decoding",level:2},{value:"STM32F769-DISCO",id:"stm32f769-disco",level:3},{value:"STM32H750-DK",id:"stm32h750-dk",level:3},{value:"<code>FileReader</code>\u63a5\u53e3",id:"filereader-interface",level:2},{value:"\u8fc1\u79fbTBS\uff0c\u4ee5\u652f\u6301\u89c6\u9891\u89e3\u7801",id:"migrating-tbs-to-support-video-decoding",level:2},{value:"General changes",id:"general-changes",level:3},{value:"\u8f6f\u4ef6\u53d8\u5316",id:"software-changes",level:3},{value:"\u786c\u4ef6\u53d8\u5316",id:"hardware-changes",level:3},{value:"\u5c06\u89c6\u9891\u7f13\u51b2\u533a\u7f6e\u4e8e\u5916\u90e8\u5b58\u50a8\u5668\u4e2d",id:"placing-video-buffer-in-external-memory",level:2},{value:"EWARM (IAR)",id:"ewarm-iar",level:3},{value:"STM32CubeIDE",id:"stm32cubeide",level:3},{value:"MDK-ARM (Keil)",id:"mdk-arm-keil",level:3}],x={toc:S};function $(e){var t,n=e,{components:d}=n,f=((e,t)=>{var n={};for(var o in e)g.call(e,o)&&t.indexOf(o)<0&&(n[o]=e[o]);if(null!=e&&h)for(var o of h(e))t.indexOf(o)<0&&_.call(e,o)&&(n[o]=e[o]);return n})(n,["components"]);return(0,o.kt)("wrapper",(t=k(k({},x),f),u(t,m({components:d,mdxType:"MDXLayout"}))),(0,o.kt)("p",null,"This section shows how to configure the ",(0,o.kt)("a",k({parentName:"p"},{href:"../generator-how-to/touchgfx-al-configuration/video-decoding"}),"TouchGFX Generator")," to generate a TouchGFX HAL that has video decoding capabilities."),(0,o.kt)("p",null,"\u5728\u4e86\u89e3\u8be5\u573a\u666f\u4e4b\u524d\uff0c\u8bf7\u9605\u8bfb\u5173\u4e8e\u5728TouchGFX\u4e2d\u4f7f\u7528",(0,o.kt)("a",k({parentName:"p"},{href:"../../ui-development/touchgfx-engine-features/video"}),"MJPEG\u89c6\u9891"),"\u7684\u6587\u6863\u548c\u5173\u4e8e",(0,o.kt)("a",k({parentName:"p"},{href:"../../ui-development/ui-components/miscellaneous/video"}),"\u89c6\u9891\u63a7\u4ef6"),"\u672c\u8eab\u7684\u6587\u6863\u3002"),(0,o.kt)("p",null,"\u4ee5\u4e0b\u573a\u666f\u8be6\u7ec6\u8bf4\u660e\u4e86\u5982\u4f55\u8d4b\u80fdTouchGFX HAL\uff0c\u4ee5\u901a\u8fc7\u8f6f\u4ef6\uff08LibJPEG\uff09\u6216\u786c\u4ef6\uff08JPEG\uff09\u652f\u6301\u89c6\u9891\u89e3\u7801\u3002 \u5b83\u6db5\u76d6STM32F7\u548cSTM32H7\uff0c\u56e0\u4e3a\u5728STM32CubeMX\u914d\u7f6e\u4e2d\uff0c\u652f\u6301\u786c\u4ef6\uff08JPEG\uff09\u89e3\u7801\u65f6\uff0cSTM32H7\u7684\u914d\u7f6e\u4e0eSTM32F7\u7565\u6709\u4e0d\u540c\u3002"),(0,o.kt)("p",null,"Be sure to ",(0,o.kt)("strong",{parentName:"p"},"read all sections")," in this article before configuring the MCU for your specific project."),(0,o.kt)("p",null,"Generally, the LibJPEG and JPEG configurations can be found in STM32CubeMX in the ",(0,o.kt)("em",{parentName:"p"},"Middleware")," and ",(0,o.kt)("em",{parentName:"p"},"Multimedia")," catagories:"),(0,o.kt)(a.Z,{noShadow:!0,imageSource:"/img/development/touchgfx-hal-development/scenarios/cubemx-jpeg-configuration.webp",width:"250",mdxType:"Figure"},"JPEG and LibJPEG setting in STM32CubeMX"),(0,o.kt)(s.Z,{mdxType:"Tip"},(0,o.kt)("li",null,"\u6700\u65b0\u7248\u672c\u7684STM32H750-DK\u3001STM32F769-DISCO\u548cSTM32F746G-DISCO TouchGFX\u786c\u4ef6\u6a21\u677f\uff08TBS\uff09\u901a\u8fc7\u5404\u81ea\u7684STM32CubeMX\u914d\u7f6e\u652f\u6301\u8f6f\u4ef6\u548cJPEG\u786c\u4ef6\u89e3\u7801\u3002"),(0,o.kt)("li",null,"Use the STM32CubeMX configurations found in these example projects as inspiration to get your specific MCU to support MJPEG Video Decoding.")),(0,o.kt)("h2",k({},{id:"video-rtos-support"}),"\u652f\u6301RTOS"),(0,o.kt)("p",null,"The ",(0,o.kt)("a",k({parentName:"p"},{href:"../generator-how-to/touchgfx-al-configuration/video-decoding"}),"Generator User Guide")," mentions that ",(0,o.kt)("em",{parentName:"p"},"Single-")," and ",(0,o.kt)("em",{parentName:"p"},"Double buffer")," decoding strategies require a CMSIS compliant RTOS, such as FreeRTOS. TouchGFX Generator generates an entry point function ",(0,o.kt)("inlineCode",{parentName:"p"},"videoTaskFunc()"),", that must be associated with a Video decoding task. STM32CubeMX can generate this configuration by defining the task and entry point function in the ",(0,o.kt)("em",{parentName:"p"},"Tasks and queues")," tab of the ",(0,o.kt)("em",{parentName:"p"},"FreeRTOS")," Middleware configuration."),(0,o.kt)("p",null,"The video task stack size (defined in words for CMSIS V2) and RTOS heap size are two important factors."),(0,o.kt)("p",null,"For software decoding the stack size must be carefully set because LibJPEG uses dynamic memory allocation. For hardware decoding the stack size can be substantially lower because there is no software stack which dynamically allocates memory."),(0,o.kt)("p",null,"FreeRTOS\u5806\u5bf9\u4e8e\u60a8\u7684\u4e00\u822c\u5e94\u7528 +",(0,o.kt)("inlineCode",{parentName:"p"}," 0xA000"),"\u5e94\u8be5\u8db3\u591f\u5927\u3002"),(0,o.kt)(a.Z,{noShadow:!0,imageSource:"/img/development/touchgfx-hal-development/scenarios/freertos-video-task.webp",width:"600",mdxType:"Figure"},"FreeRTOS\u4efb\u52a1\u914d\u7f6e"),(0,o.kt)(a.Z,{noShadow:!0,imageSource:"/img/development/touchgfx-hal-development/scenarios/freertos-video-decoding-heap-size.webp",width:"600",mdxType:"Figure"},"FreeRTOS\u5806\u5927\u5c0f\u914d\u7f6e"),(0,o.kt)("p",null,"Based on the above configuration, STM32CubeMX generates the following code for the video task:"),(0,o.kt)(l.Z,{mdxType:"CodeHeader"},"main.c"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-cpp",metastring:"{2-7,13}","{2-7,13}":!0}),'/* Definitions for VideoTask */\nosThreadId_t VideoTaskHandle;\nconst osThreadAttr_t VideoTask_attributes = {\n  .name = "VideoTask",\n  .stack_size = 1000 * 4,\n  .priority = (osPriority_t) osPriorityLow,\n};\n...\nvoid main()\n{\n    ...\n    /* creation of VideoTask */\n    VideoTaskHandle = osThreadNew(videoTaskFunc, NULL, &VideoTask_attributes);\n    ...\n\n}\n')),(0,o.kt)(l.Z,{mdxType:"CodeHeader"},"FreeRTOSConfig.h"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-cpp"}),"#define configTOTAL_HEAP_SIZE                    ((size_t)75000)\n")),(0,o.kt)("h2",k({},{id:"software-decoding"}),"\u8f6f\u4ef6\u89e3\u7801"),(0,o.kt)("p",null,"The software decoding solution requires that the ",(0,o.kt)("strong",{parentName:"p"},"LibJPEG")," middleware is enabled from STM32CubeMX, as specified in ",(0,o.kt)("a",k({parentName:"p"},{href:"../generator-how-to/touchgfx-al-configuration/video-decoding#video-decoding-type"}),"Generator User Guide"),". \u8f6f\u4ef6\u89e3\u7801\u8bbe\u7f6e\u5bf9\u4e8e\u6240\u6709\u5177\u5907LibJPEG\u529f\u80fd\u7684MCU\uff08\u5982STM32F4\u3001STM32F7\u3001STM32H7\uff09\u90fd\u662f\u76f8\u540c\u7684\u3002"),(0,o.kt)("p",null,"TouchGFX\u8f6f\u4ef6\u89e3\u7801\u5668\u671f\u671bLibJPEG\u89e3\u7801\u7684\u6570\u636e\u6309\u7167BGR\u50cf\u7d20\u6392\u5e8f\u3002 \u5982\u679c\u8be5\u8bbe\u7f6e\u4fdd\u7559\u4e3aRGB\uff0cR\u548cB\u989c\u8272\u5206\u91cf\u5c06\u5728\u5e94\u7528\u4e2d\u4e92\u6362\u3002"),(0,o.kt)("p",null,"Furthermore, the size of each pixel should be 3 bytes if using a 16-bit or 24-bit video RGB buffer or 4 if using a 32-bit video RGB buffer."),(0,o.kt)(a.Z,{noShadow:!0,imageSource:"/img/development/touchgfx-hal-development/scenarios/libjpeg-configuration.webp",width:"500",mdxType:"Figure"},"LibJPEG Configuration for a 16-bit or 24-bit video RGB buffer"),(0,o.kt)(p.Z,{mdxType:"Caution"},(0,o.kt)("li",null,"The RGB_ORDERING setting must be configured as BGR, and the pixel size must be set according to which video RGB buffer format is used."),(0,o.kt)("li",null,"If your application uses ",(0,o.kt)("b",null,"Direct to Framebuffer")," strategy in a ",(0,o.kt)("b",null,"ARGB8888")," (32-bit) application the ",(0,o.kt)("b",null,"pixel size")," must be set to 4")),(0,o.kt)("h3",k({},{id:"video-data"}),"\u89c6\u9891\u6570\u636e"),(0,o.kt)(p.Z,{mdxType:"Caution"},"\u5f53\u524d\u89e3\u7801\u89e3\u51b3\u65b9\u6848\uff08\u4f7f\u7528STM32CubeMX\u3001TouchGFX Generator\u3001\u4ee5\u53ca\u6765\u81eaTouchGFX Designer\u7684\u89c6\u9891\u63a7\u4ef6\uff09\u76ee\u524d\u53ea\u9002\u7528\u4e8e\u610f\u6cd5\u534a\u5bfc\u4f53\u5f00\u53d1\u677f\uff0c\u56e0\u4e3a\u5728\u5e94\u7528\u7a0b\u5e8f\u94fe\u63a5\u65f6\uff0c\u89c6\u9891\u6570\u636e\u88ab\u94fe\u63a5\u5230\u5185\u5b58\u6620\u5c04\u7684flash\u4e2d\u5df2\u77e5\u7684\u7279\u5b9a\u5730\u5740\u3002"),(0,o.kt)("p",null,"\u4e0b\u9762\u6765\u81eaEWARM\u9879\u76ee\u7684\u4ee3\u7801\u7247\u6bb5\u663e\u793a\u4e86\u7531TouchGFX\u8bbe\u8ba1\u5668\u521b\u5efa\u7684\u989d\u5916\u9009\u9879\uff0c\u4ee5\u53ca\u5b83\u5982\u4f55\u5c06\u6570\u636e\u653e\u5728",(0,o.kt)("inlineCode",{parentName:"p"},"ExtFlashSection"),"\u4e2d\uff0c\u540e\u8005\u662f\u5728\u6240\u6709TouchGFX\u677f\u7ea7\u5305\u7684\u94fe\u63a5\u5668\u811a\u672c\u4e2d\u5b9a\u4e49\u7684\u3002 \u8fd9\u4e0d\u9002\u7528\u4e8e\u975e\u5185\u5b58\u6620\u5c04\u7684flash\u6216\u672a\u5b9a\u4e49\u6b64\u90e8\u5206\u7684\u9879\u76ee\u3002"),(0,o.kt)(l.Z,{mdxType:"CodeHeader"},"ewarm_project.ewp"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{}),"        <option>\n          <name>IlinkExtraOptions</name>\n          <state>--image_input $PROJ_DIR$\\..\\TouchGFX\\generated\\videos\\bin\\washerdryer.bin,video_washerdryer_bin_start,ExtFlashSection,4</state>\n          <state>--keep video_washerdryer_bin_start</state>\n        </option>\n")),(0,o.kt)("p",null,"\u5bf9\u4e8e\u89c6\u9891\u6570\u636e\u4f4d\u4e8e\u975e\u5185\u5b58\u6620\u5c04\u7684flash\u4e2d\u7684\u9879\u76ee\uff0c\u8bf7\u9605\u8bfb\u672c\u6587\u4e2d\u7684",(0,o.kt)("inlineCode",{parentName:"p"},"FileReader"),"\u90e8\u5206\u3002"),(0,o.kt)("h2",k({},{id:"hardware-decoding"}),"\u786c\u4ef6\u89e3\u7801"),(0,o.kt)("p",null,"The ",(0,o.kt)("a",k({parentName:"p"},{href:"../generator-how-to/touchgfx-al-configuration/video-decoding"}),"Generator User Guide")," mentions that the ",(0,o.kt)("strong",{parentName:"p"},"JPEG IP")," must be enabled in STM32CubeMX to enable Hardware decoding."),(0,o.kt)("h3",k({},{id:"stm32f769-disco"}),"STM32F769-DISCO"),(0,o.kt)("p",null,"\u652f\u6301JPEG\u529f\u80fd\u7684STM32F7\u7cfb\u5217\uff08\u4f8b\u5982STM32F769\uff09\u7684JPEG\u914d\u7f6e\uff0c\u4e0eSTM32H7\u7cfb\u5217\u7565\u6709\u4e0d\u540c\u3002 The ",(0,o.kt)("inlineCode",{parentName:"p"},"RGB_FORMAT")," setting found in the ",(0,o.kt)("em",{parentName:"p"},"JPEG")," configurations must respect the pixel format of the TouchGFX Framebuffer, ",(0,o.kt)("inlineCode",{parentName:"p"},"JPEG_RGB565")," in the example below."),(0,o.kt)(a.Z,{noShadow:!0,imageSource:"/img/development/touchgfx-hal-development/scenarios/jpeg-hw-configuration.webp",width:"450",mdxType:"Figure"},"JPEG\u53c2\u6570\u8bbe\u7f6e"),(0,o.kt)("p",null,"Use DMA to transfer data to (memory-to-peripheral) and from (peripheral-to-memory) the JPEG peripheral through the ",(0,o.kt)("em",{parentName:"p"},"DMA Settings")," tab found in ",(0,o.kt)("em",{parentName:"p"},"JPEG")," configurations. \u4e3a",(0,o.kt)("inlineCode",{parentName:"p"},"IN"),"\u548c",(0,o.kt)("inlineCode",{parentName:"p"},"OUT"),"\u5404",(0,o.kt)("em",{parentName:"p"},"\u6dfb\u52a0"),"\u4e00\u4e2aDMA\u8bf7\u6c42\u5c06\u81ea\u52a8\u8bbe\u7f6e\u65b9\u5411\u53c2\u6570\u3002"),(0,o.kt)(a.Z,{noShadow:!0,imageSource:"/img/development/touchgfx-hal-development/scenarios/jpeg-hw-dma-configuration.webp",width:"450",mdxType:"Figure"},"JPEG DMA\u8bbe\u7f6e"),(0,o.kt)("p",null,"\u672c\u8282\u603b\u7ed3\u4e86\u652f\u6301JPEG\u529f\u80fd\u7684STM32F7\uff08\u4f8b\u5982STM32F769\uff09\u4e0a\u4f7f\u7528\u786c\u4ef6\u89e3\u7801\u65f6TouchGFX HAL\u7684\u914d\u7f6e\u3002 \u4eceSTM32CubeMX\u751f\u6210\u4ee3\u7801\u540e\uff0c\u5728\u4eceDesigner\u4f7f\u7528\u89c6\u9891\u63a7\u4ef6\u65f6\uff0c\u5e94\u7528\u7a0b\u5e8f\u5c06\u80fd\u591f\u4f7f\u7528JPEG\u5916\u8bbe\u89e3\u7801\u89c6\u9891\u3002"),(0,o.kt)(p.Z,{mdxType:"Caution"},"JPEG\u5916\u8bbe\u914d\u7f6e\u7684RGB_FORMAT\u5fc5\u987b\u9075\u5b88TouchGFX Framebuffer\u7684\u683c\u5f0f"),(0,o.kt)("h3",k({},{id:"stm32h750-dk"}),"STM32H750-DK"),(0,o.kt)("p",null,"\u552f\u4e00\u80fd\u5c06\uff08\u4f8b\u5982\uff09STM32H750\u548cSTM32F769\u4e0a\u7684\u786c\u4ef6\u89e3\u7801\uff08\u652f\u6301JPEG\uff09\u52a0\u4ee5\u533a\u5206\u7684\u56e0\u7d20\u662f\u5728STM32CubeMX\u4e2d\u914d\u7f6eDMA\u4f20\u8f93\u7684\u65b9\u5f0f\u3002 \u4e0d\u4ec5UI\u4e0d\u540c\uff0cDMA\u6982\u5ff5\u4e5f\u4e0d\u540c\u3002"),(0,o.kt)("p",null,"\u5bf9\u4e8eSTM32H750\uff0cJPEG\u5916\u8bbe\u53ea\u80fd\u914d\u7f6e\u4e3a\u4f7f\u7528MDMA\u5916\u8bbe\uff08\u800c\u4e0d\u662f\u5e38\u89c4DMA\u5916\u8bbe\uff09\u3002 \u4e3a\u8f93\u5165\u548c\u8f93\u51faFIFO\u9608\u503c\u4fe1\u53f7\u6dfb\u52a0MDMA\u914d\u7f6e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002"),(0,o.kt)(i.Z,{mdxType:"Note"},"\u4e0eDMA1/DMA2\u76f8\u6bd4\uff0cMDMA\u662f\u6027\u80fd\u9ad8\u5f88\u591a\u7684DMA\u5f15\u64ce"),(0,o.kt)(a.Z,{noShadow:!0,imageSource:"/img/development/touchgfx-hal-development/scenarios/mdma-input-fifo-threshold.webp",mdxType:"Figure"},"JPEG DMA\u8bbe\u7f6e"),(0,o.kt)(a.Z,{noShadow:!0,imageSource:"/img/development/touchgfx-hal-development/scenarios/mdma-output-fifo-threshold.webp",mdxType:"Figure"},"JPEG DMA\u8bbe\u7f6e"),(0,o.kt)("h2",k({},{id:"filereader-interface"}),(0,o.kt)("inlineCode",{parentName:"h2"},"FileReader"),"\u63a5\u53e3"),(0,o.kt)("p",null,"\u5f53\u5728\u975e\u5185\u5b58\u6620\u5c04\u7684\u5b58\u50a8\u5668\u4e2d\u5b58\u50a8MJPEG\u89c6\u9891\u65f6\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u6307\u5b9a",(0,o.kt)("inlineCode",{parentName:"p"},"touchgfx::VideoDataReader"),"\u7684\u5b9e\u73b0\uff0cTouchGFX\u89c6\u9891\u63a7\u5236\u5668\u53ef\u4ee5\u4f7f\u7528\u5b83\u5c06\u9700\u8981\u89e3\u7801\u7684\u6570\u636e\u4f20\u8f93\u5230\u914d\u7f6e\u7684\u89e3\u7801\u5668\uff08\u8f6f\u4ef6/\u786c\u4ef6\uff09\u3002 \u4e0b\u9762\u662f\u6b64\u63a5\u53e3\u7684\u7b80\u5355\u793a\u4f8b\uff0c\u5b83\u5c06\u89c6\u9891\u6570\u636e\u4ece\u4e00\u4e2a\u7f13\u51b2\u533a\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u7f13\u51b2\u533a\u3002"),(0,o.kt)(l.Z,{mdxType:"CodeHeader"},"VideoView.cpp"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-cpp"}),"class MyReader : public touchgfx::VideoDataReader\n{\npublic:\n    MyReader() : position(0) { }\n    virtual uint32_t getDataLength() { return video_len; }\n    virtual void seek(uint32_t pos) { position = pos; }\n    virtual bool readData(void* dst, uint32_t bytes)\n    {\n        memcpy(dst, &video_data[position], bytes);\n        position += bytes;\n        return true;\n    }\n    private:\n        uint32_t position;\n} myReader;\n")),(0,o.kt)("p",null,"\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u914d\u7f6e\u63a7\u4ef6\u4ee5\u4f7f\u7528\u6570\u636e\u8bfb\u53d6\u5668\uff0c\u800c\u4e0d\u662f\u5c06\u4e00\u4e2a",(0,o.kt)("inlineCode",{parentName:"p"},"Video"),"\u63a7\u4ef6\u6307\u5411\u6620\u5c04\u5185\u5b58\u4e2d\u7684\u89c6\u9891\u5f00\u59cb\u90e8\u5206\uff1a"),(0,o.kt)(l.Z,{mdxType:"CodeHeader"},"VideoView.cpp"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-cpp"}),"video.setVideoData(myReader);\n")),(0,o.kt)("h2",k({},{id:"migrating-tbs-to-support-video-decoding"}),"\u8fc1\u79fbTBS\uff0c\u4ee5\u652f\u6301\u89c6\u9891\u89e3\u7801"),(0,o.kt)("p",null,"If you want to migrate a project created from a TouchGFX Board Setups (TBS) - with a MCU that supports video decoding - from a version of TouchGFX Designer before video decoding was supported and you want to be able to use 'Run Target' in TouchGFX Designer with that project, some manual changes to the GCC Makefile are required."),(0,o.kt)("p",null,"\u4ee5\u4e0b\u90e8\u5206\u5c06\u5217\u51fa\u6240\u9700\u7684\u53d8\u66f4\u3001\u4ee5\u53ca\u8fdb\u884c\u53d8\u66f4\u7684\u539f\u56e0\u3002 There are some general changes that must always be applied and some LibJPEG (software decoding) and JPEG (hardware decoding) specific changes depending on what the developers application uses. \u8fd9\u4e9b\u66f4\u6539\u662f\u5bf9\u65e7TBS\u4e2d\u5df2\u7ecf\u5b58\u5728\u7684GCC Makefile\u7684\u6269\u5c55\u3002"),(0,o.kt)("p",null,"\u5982\u4e0a\u8ff0\u573a\u666f\u6240\u8ff0\uff0c\u9664\u4e86\u66f4\u65b0Makefile\uff0c\u60a8\u8fd8\u5fc5\u987b\u5728STM32CubeMX\u4e2d\u8bbe\u7f6e\u89c6\u9891\u89e3\u7801\u3002"),(0,o.kt)("h3",k({},{id:"general-changes"}),"General changes"),(0,o.kt)("p",null,"\u5b9a\u4e49\u60a8\u9879\u76ee\u4e2d\u7684LIBJPEG\u8def\u5f84\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-make",metastring:"{2}","{2}":!0}),"# LibJPEG path\nlibjpeg_path := $(cubemx_middlewares_path)/Third_Party/LibJPEG\n")),(0,o.kt)("p",null,"\u7136\u540e\u5fc5\u987b\u5b9a\u4e49\u89c6\u9891\u8d44\u6e90\u8f93\u5165\u8def\u5f84\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-make",metastring:"{3}","{3}":!0}),"asset_texts_input  := TouchGFX/assets/texts\n\nasset_videos_input := TouchGFX/assets/videos\n")),(0,o.kt)("p",null,"The video assets output path must also be defined bellow the already existing assets output paths:"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-make",metastring:"{4}","{4}":!0}),"asset_images_output := $(asset_root_path)/images\nasset_fonts_output := $(asset_root_path)/fonts\nasset_texts_output := $(asset_root_path)/texts\nasset_videos_output := $(asset_root_path)/videos\n")),(0,o.kt)("p",null,"\u5c06\u89c6\u9891\u8f93\u51fa\u8d44\u6e90\u6dfb\u52a0\u5230\u7ec4\u4ef6\u5217\u8868\u4e2d\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-make",metastring:"{6}","{6}":!0}),"all_components := $(components) \\\n    $(asset_fonts_output) \\\n    $(asset_images_output) \\\n    $(asset_texts_output)\n    $(asset_texts_output) \\\n    $(asset_videos_output)\n")),(0,o.kt)("p",null,"\u5fc5\u987b\u5b9a\u4e49\u89c6\u9891\u5bf9\u8c61\u6587\u4ef6\u3002 The video object files are separated from the already existing object:"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-make",metastring:"{4}","{4}":!0}),"c_source_files := $(call find, $(source_paths),*.c) $(os_source_files) $(board_c_files)\nsource_files += $(board_cpp_files)\n\nvideo_object_files := $(call find, $(asset_videos_output),*.o)\n")),(0,o.kt)("p",null,"\u5fc5\u987b\u5b9a\u4e49\u89c6\u9891\u8f6c\u6362\u5668\u811a\u672c\u7684\u8def\u5f84\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-make",metastring:"{3}","{3}":!0}),"textconvert_script_path := $(touchgfx_path)/framework/tools/textconvert\ntextconvert_executable := $(call find, $(textconvert_script_path), *.rb)\nvideoconvert_script_path := $(touchgfx_path)/framework/tools/videoconvert\n")),(0,o.kt)("p",null,"An optional ",(0,o.kt)("inlineCode",{parentName:"p"},"echo")," can be added to see all video objects files. \u89c6\u9891\u5bf9\u8c61\u6587\u4ef6\u5fc5\u987b\u6dfb\u52a0\u5230\u94fe\u63a5\u9636\u6bb5\u3002 \u8be5\u884c\u5c06$(video_object_files)\u548c\u5176\u4ed6\u5bf9\u8c61\u6587\u4ef6\u52a0\u5728\u4e00\u8d77\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-make",metastring:"{2,6}","{2,6}":!0}),"$(binary_output_path)/$(target_executable): $(object_files) $(object_asm_files)\n    @echo Video Objects: $(video_object_files)\n    @echo Linking $(@)\n    @mkdir -p $(@D)\n    @mkdir -p $(object_output_path)\n    @$(file >$(build_root_path)/objects.tmp) $(foreach F,$(object_files) $(video_object_files),$(file >>$(build_root_path)/objects.tmp,$F))\n")),(0,o.kt)("p",null,"\u5c06\u89c6\u9891\u89c4\u5219\u6dfb\u52a0\u5230\u73b0\u6709",(0,o.kt)("em",{parentName:"p"},"\u8d44\u6e90"),"\u548c.PHONY\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-make",metastring:"{1,3}","{1,3}":!0}),"_assets_: BitmapDatabase TextKeysAndLanguages Videos\n\n.PHONY: BitmapDatabase TextKeysAndLanguages Videos\n")),(0,o.kt)("p",null,"\u6dfb\u52a0\u89c6\u9891\u8f6c\u6362\u540e\uff0c\u63a5\u7740\u6dfb\u52a0\u89c6\u9891\u89c4\u5219\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-make"}),"Videos:\n    @ruby $(videoconvert_script_path)/videoconvert.rb $(asset_videos_input) $(asset_videos_output)\n")),(0,o.kt)("p",null,"\u6700\u540e\u66f4\u65b0\u6e05\u9664\u89c4\u5219\uff0c\u4e5f\u5220\u9664\u4e0e\u89c6\u9891\u76f8\u5173\u7684\u8f93\u51fa\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-make",metastring:"{8}","{8}":!0}),"_clean_:\n    @echo Cleaning: $(board_name)\n    @rm -rf $(build_root_path)\n    # Do not remove gui_generated\n    @rm -rf $(asset_images_output)\n    @rm -rf $(asset_fonts_output)\n    @rm -rf $(asset_texts_output)\n    @rm -rf $(asset_videos_output)\n    # Create directory to avoid error if it does not exist\n    @mkdir -p $(asset_root_path)\n    # Remove assets folder if it is empty (i.e. no gui_generated folder)\n    @rmdir --ignore-fail-on-non-empty $(asset_root_path)\n    # Clean bootloader project\n    @$(MAKE) -r -f ExtMem_Boot/gcc/Makefile -s $(MFLAGS) clean\n")),(0,o.kt)("h3",k({},{id:"software-changes"}),"\u8f6f\u4ef6\u53d8\u5316"),(0,o.kt)("p",null,"\u6dfb\u52a0\u6240\u6709LIBJPEG\u8def\u5f84\u5230include\u8def\u5f84\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-make",metastring:"{9-11}","{9-11}":!0}),"include_paths := $(library_includes) \\\n    $(foreach comp, $(all_components), $(comp)/include) \\\n    $(foreach comp, $(cubemx_components), $(comp)/Inc) \\\n    $(foreach comp, $(touchgfx_generator_components), $(comp)/generated) \\\n    $(framework_includes) \\\n    $(cubemx_middlewares_path) \\\n    $(touchgfx_middlewares_path) \\\n    $(touchgfx_generator_components) \\\n    LIBJPEG/Target \\\n    $(libjpeg_path)/include \\\n    LIBJPEG/App\n")),(0,o.kt)("p",null,"\u5fc5\u987b\u5b9a\u4e49LIBJPEG\u6e90\u8def\u5f84\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-make",metastring:"{4-5}","{4-5}":!0}),"c_source_files := $(call find, $(source_paths),*.c) $(os_source_files) $(board_c_files)\nsource_files += $(board_cpp_files)\n\nlibjpeg_source_path = Middlewares/Third_Party/LibJPEG/source\n")),(0,o.kt)("p",null,"\u63a5\u4e0b\u6765\uff0c\u6240\u6709LIBJPEG\u6e90\u6587\u4ef6\u5fc5\u987b\u6dfb\u52a0\u5230board_c_files\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-make",metastring:"{10-37}","{10-37}":!0}),"board_c_files := \\\n    $(Drivers_path)/BSP/STM32H750B-DK/stm32h750b_discovery_bus.c \\\n    $(Drivers_path)/BSP/STM32H750B-DK/stm32h750b_discovery_qspi.c \\\n    $(Drivers_path)/BSP/STM32H750B-DK/stm32h750b_discovery_sdram.c \\\n    $(Drivers_path)/BSP/STM32H750B-DK/stm32h750b_discovery_ts.c \\\n    $(Drivers_path)/BSP/Components/ft5336/ft5336.c \\\n    $(Drivers_path)/BSP/Components/ft5336/ft5336_reg.c \\\n    $(Drivers_path)/BSP/Components/mt25tl01g/mt25tl01g.c \\\n    $(Drivers_path)/BSP/Components/mt48lc4m32b2/mt48lc4m32b2.c \\\n    $(libjpeg_source_path)/jaricom.c \\\n    $(libjpeg_source_path)/jcomapi.c \\\n    $(libjpeg_source_path)/jdapimin.c \\\n    $(libjpeg_source_path)/jdapistd.c \\\n    $(libjpeg_source_path)/jdarith.c \\\n    $(libjpeg_source_path)/jdatasrc.c \\\n    $(libjpeg_source_path)/jdcoefct.c \\\n    $(libjpeg_source_path)/jdcolor.c \\\n    $(libjpeg_source_path)/jddctmgr.c \\\n    $(libjpeg_source_path)/jdhuff.c \\\n    $(libjpeg_source_path)/jdinput.c \\\n    $(libjpeg_source_path)/jdmainct.c \\\n    $(libjpeg_source_path)/jdmarker.c \\\n    $(libjpeg_source_path)/jdmaster.c \\\n    $(libjpeg_source_path)/jdmerge.c \\\n    $(libjpeg_source_path)/jdpostct.c \\\n    $(libjpeg_source_path)/jdsample.c \\\n    $(libjpeg_source_path)/jdtrans.c \\\n    $(libjpeg_source_path)/jerror.c \\\n    $(libjpeg_source_path)/jidctflt.c \\\n    $(libjpeg_source_path)/jidctfst.c \\\n    $(libjpeg_source_path)/jidctint.c \\\n    $(libjpeg_source_path)/jmemmgr.c \\\n    $(libjpeg_source_path)/jmemnobs.c \\\n    $(libjpeg_source_path)/jquant1.c \\\n    $(libjpeg_source_path)/jquant2.c \\\n    $(libjpeg_source_path)/jutils.c \\\n    LIBJPEG/App/libjpeg.c\n")),(0,o.kt)("p",null,"\u7136\u540e\u5c06LIBJPEG\u6e90\u6587\u4ef6\u6dfb\u52a0\u5230\u73b0\u6709\u7684\u76ee\u6807\u6587\u4ef6\u4e2d\uff0c\u65b9\u6cd5\u4e0e\u5176\u4ed6\u4e2d\u95f4\u4ef6\u6e90\u6587\u4ef6\u76f8\u540c\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-make",metastring:"{6}","{6}":!0}),"# Start converting paths\nobject_files := $(object_files:$(touchgfx_path)/%.cpp=$(object_output_path)/touchgfx/%.o)\nobject_files := $(object_files:%.cpp=$(object_output_path)/%.o)\nobject_files := $(object_files:$(touchgfx_middlewares_path)/%.c=$(object_output_path)/$(touchgfx_middlewares_path)/%.o)\nobject_files := $(object_files:$(cubemx_middlewares_path)/%.c=$(object_output_path)/$(cubemx_middlewares_path)/%.o)\nobject_files := $(object_files:$(libjpeg_source_path)/%.c=$(object_output_path)/$(libjpeg_source_path)/%.o)\nobject_files := $(object_files:$(Drivers_path)/%.c=$(object_output_path)/Drivers/%.o)\nobject_files := $(object_files:%.c=$(object_output_path)/%.o)\n")),(0,o.kt)("h3",k({},{id:"hardware-changes"}),"\u786c\u4ef6\u53d8\u5316"),(0,o.kt)("p",null,"\u6dfb\u52a0\u6240\u6709JPEG\u8def\u5f84\u5230include \u8def\u5f84\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-make",metastring:"{9}","{9}":!0}),"include_paths := $(library_includes) \\\n    $(foreach comp, $(all_components), $(comp)/include) \\\n    $(foreach comp, $(cubemx_components), $(comp)/Inc) \\\n    $(foreach comp, $(touchgfx_generator_components), $(comp)/generated) \\\n    $(framework_includes) \\\n    $(cubemx_middlewares_path) \\\n    $(touchgfx_middlewares_path) \\\n    $(touchgfx_generator_components) \\\n    Utilities/JPEG\n")),(0,o.kt)("p",null,"\u63a5\u4e0b\u6765\uff0c\u6240\u6709JPEG\u6e90\u6587\u4ef6\u5fc5\u987b\u6dfb\u52a0\u5230board_c_files\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-make",metastring:"{10}","{10}":!0}),"board_c_files := \\\n    $(Drivers_path)/BSP/STM32H750B-DK/stm32h750b_discovery_bus.c \\\n    $(Drivers_path)/BSP/STM32H750B-DK/stm32h750b_discovery_qspi.c \\\n    $(Drivers_path)/BSP/STM32H750B-DK/stm32h750b_discovery_sdram.c \\\n    $(Drivers_path)/BSP/STM32H750B-DK/stm32h750b_discovery_ts.c \\\n    $(Drivers_path)/BSP/Components/ft5336/ft5336.c \\\n    $(Drivers_path)/BSP/Components/ft5336/ft5336_reg.c \\\n    $(Drivers_path)/BSP/Components/mt25tl01g/mt25tl01g.c \\\n    $(Drivers_path)/BSP/Components/mt48lc4m32b2/mt48lc4m32b2.c \\\n    Utilities/JPEG/jpeg_utils.c\n")),(0,o.kt)("h2",k({},{id:"placing-video-buffer-in-external-memory"}),"\u5c06\u89c6\u9891\u7f13\u51b2\u533a\u7f6e\u4e8e\u5916\u90e8\u5b58\u50a8\u5668\u4e2d"),(0,o.kt)("p",null,"When developers create new projects with STM32CubeMX, the linker scripts associated with the generated projects do not contain any of the possible regions used by TouchGFX. \u56e0\u6b64\uff0c\u7528\u4e8e\u89e3\u7801MJPEG\u89c6\u9891\u7684\u7279\u5b9a\u7f13\u51b2\u533a\u88ab\u94fe\u63a5\u5668\u653e\u7f6e\u5728\u5185\u90e8flash\u4e2d\uff0c\u76f4\u81f3\u5f00\u53d1\u4eba\u5458\u4fee\u6539\u4ed6\u4eec\u7684\u94fe\u63a5\u5668\u811a\u672c\uff0c\u5c06\u7f13\u51b2\u533a\u653e\u7f6e\u5230\u5176\u4ed6\u5730\u65b9\u3002 \u5982\u679c\u6ca1\u6709\u8fd9\u6837\u7684\u4fee\u6539\uff0c\u5f00\u53d1\u4eba\u5458\u5c06\u4f1a\u9047\u5230\u5927\u91cf\u5185\u90e8\u5b58\u50a8\u88ab\u4f7f\u7528\u7684\u60c5\u51b5\uff0c\u53ef\u80fd\u65e0\u6cd5\u5bb9\u7eb3\u5927\u4e00\u70b9\u7684\u89c6\u9891\u7f13\u51b2\u533a\uff0c\u6bd4\u5982\u5168\u5c4f\u89c6\u9891\u89e3\u7801\u6240\u9700\u7684\u7f13\u51b2\u533a\u3002"),(0,o.kt)(s.Z,{mdxType:"Tip"},"\u4ee5\u4e0bTBS\u662f\u9884\u5148\u914d\u7f6e\u597d\u7684\uff0c\u53ef\u4ee5\u4ece\u5916\u90e8\u5b58\u50a8\u89e3\u7801\u89c6\u9891\uff1a",(0,o.kt)("ol",null,(0,o.kt)("li",null,"STM32F746-DISCO"),(0,o.kt)("li",null,"STM32F769-DISCO"),(0,o.kt)("li",null,"STM32H750-DK"))),(0,o.kt)("p",null,"\u542f\u7528\u89c6\u9891\u89e3\u7801\u4ee5\u540e\uff0cTouchGFX Generator\u751f\u6210\u7528\u4e8eJPEG\u89e3\u7801\u7684RGB\u7f13\u51b2\u533a\u7684\u5b9a\u4e49\u3002 \u8be5\u5b9a\u4e49\u662f\u7528\u4e00\u4e2a\u4f4d\u7f6e\u6307\u793a\u6765\u5b9e\u73b0\u7684\uff0c\u5b83\u544a\u8bc9\u94fe\u63a5\u5668\u5e94\u8be5\u5c06\u7f13\u51b2\u533a\u653e\u5728\u54ea\u4e2a\u90e8\u5206\u3002 \u5982\u679c\u94fe\u63a5\u5668\u5728\u94fe\u63a5\u5668\u811a\u672c\u4e2d\u627e\u4e0d\u5230\u8be5\u5b58\u50a8\u533a\u57df\uff0c\u7f13\u51b2\u533a\u5c06\u88ab\u653e\u5728\u5185\u90e8\u5b58\u50a8\u4e2d\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-cpp"}),'LOCATION_PRAGMA_NOLOAD("Video_RGB_Buffer")\nuint32_t videoRGBBuffer[57600] LOCATION_ATTRIBUTE_NOLOAD("Video_RGB_Buffer");\n')),(0,o.kt)("p",null,"\u4e0b\u9762\u7279\u5b9a\u4e8e\u7f16\u8bd1\u5668\u7684\u5b50\u7ae0\u8282\u63cf\u8ff0\u4e86\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u8fdb\u884c\u7684\u4fee\u6539\uff0c\u4ee5\u5b9e\u73b0\u5728SDRAM\u4e2d\u653e\u7f6e\u7f13\u51b2\u533a\u3002 ",(0,o.kt)("inlineCode",{parentName:"p"},"Video_RGB_Buffer"),"\u8868\u793a\u7528\u4e8e\u89c6\u9891\u89e3\u7801\u7684\u7f13\u51b2\u533a\u3002 \u94fe\u63a5\u5668\u811a\u672c\u793a\u4f8b\u5728SDRAM\u4e2d\u4e3aTouchGFX\u5e27\u7f13\u5b58\u533a\u4fdd\u7559\u4e86\u4e00\u4e9b\u7a7a\u95f4\uff08\u4ece0x",(0,o.kt)("inlineCode",{parentName:"p"},"C0000000"),"\u5f00\u59cb\uff09\u3002"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"EWARM"),(0,o.kt)("li",{parentName:"ol"},"STM32CubeIDE"),(0,o.kt)("li",{parentName:"ol"},"MDK-ARM")),(0,o.kt)(r.Z,{mdxType:"FurtherReading"},"Please read the section in the ",(0,o.kt)(c.Z,{to:"../../touchgfx-hal-development/generator-how-to/touchgfx-al-configuration/video-decoding",mdxType:"Link"},"Generator User Guide"),"  on configuring a project for Video Decoding."),(0,o.kt)("p",null,"\u4e0b\u9762\u7684\u4f8b\u5b50\u90fd\u5728STM32F746G-DISCO\u677f\uff08",(0,o.kt)("inlineCode",{parentName:"p"},"0xC0000000"),"->>",(0,o.kt)("inlineCode",{parentName:"p"},"0xC00FF000"),"\uff09\u4e0a\u7684SDRAM\u5f00\u59cb\u90e8\u5206\u4fdd\u7559\u4e86\u4e00\u4e9b\u7a7a\u95f4\uff0c\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u901a\u8fc7\u5730\u5740\uff08\u4f8b\u5982",(0,o.kt)("inlineCode",{parentName:"p"},"0xC0000000"),"\uff09\u5f15\u7528\u5e27\u7f13\u5b58\u533a\uff0c\u800c\u4e0d\u5b58\u5728\u94fe\u63a5\u5668\u8986\u76d6\u5e27\u7f13\u5b58\u533a\u6570\u636e\u7684\u98ce\u9669\u3002 \u6bcf\u4e2a\u793a\u4f8b\u90fd\u5141\u8bb8\u94fe\u63a5\u5668\u5c06",(0,o.kt)("inlineCode",{parentName:"p"},"Video_RGB_Buffer"),"\u653e\u5165\u5df2\u5b9a\u4e49\u7684SDRAM\u533a\u57df\u3002"),(0,o.kt)(s.Z,{mdxType:"Tip"},"\u5982\u679c\u4f60\u5206\u914dTouchgfx\u5e27\u7f13\u5b58\u533a\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u76f4\u63a5\u5bfb\u5740\uff0c\u90a3\u4e48\u4f60\u7684\u94fe\u63a5\u5668\u811a\u672c\u4e5f\u5e94\u8be5\u5c06",(0,o.kt)("b",null,"TouchGFX_Framebuffer"),"\u653e\u5165SDRAM\u4e2d\u3002"),(0,o.kt)("h3",k({},{id:"ewarm-iar"}),"EWARM (IAR)"),(0,o.kt)(l.Z,{mdxType:"CodeHeader"},"stm32f746xx_flash.icf"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{}),"define symbol __ICFEDIT_region_SDRAM_start__   = 0xC00FF000;\ndefine symbol __ICFEDIT_region_SDRAM_end__     = 0xC0700FFF;\n\ndefine region SDRAM_region    = mem:[from __ICFEDIT_region_SDRAM_start__ to __ICFEDIT_region_SDRAM_end__];\n\nplace in SDRAM_region    { first section Video_RGB_Buffer };\n")),(0,o.kt)("p",null,"\u94fe\u63a5\u4e4b\u540e\uff0c",(0,o.kt)("inlineCode",{parentName:"p"},"EWARM\\STM32F746G_DISCO\\List\\STM32F746G_DISCO.map"),"\u5305\u542b",(0,o.kt)("inlineCode",{parentName:"p"},"Video_RGB_Buffer"),"\u7684\u4ee5\u4e0b\u653e\u7f6e\u4fe1\u606f\uff1a"),(0,o.kt)(l.Z,{mdxType:"CodeHeader"},"STM32F746G_DISCO.map"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{}),"Video_RGB_Buffer        zero     0xc00f'f000   0x3'8400  TouchGFXGeneratedHAL.o [2]\n                               - 0xc013'7400   0x3'8400\n")),(0,o.kt)("h3",k({},{id:"stm32cubeide"}),"STM32CubeIDE"),(0,o.kt)(l.Z,{mdxType:"CodeHeader"},"STM32F746NGHX_FLASH.ld"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{}),"MEMORY\n{\n  ...\n  SDRAM      (xrw)    : ORIGIN = 0xC00FF000,   LENGTH = 8M\n}\n\nBufferSection (NOLOAD) :\n{\n  *(Video_RGB_Buffer Video_RGB_Buffer.*)\n  *(.gnu.linkonce.r.*)\n  . = ALIGN(0x4);\n} >SDRAM\n\n")),(0,o.kt)("p",null,"\u7f16\u8bd1\u4e4b\u540e\uff0c",(0,o.kt)("inlineCode",{parentName:"p"},"STM32CubeIDE\\Debug\\STM32F746G_DISCO.map")," \u5305\u542b",(0,o.kt)("inlineCode",{parentName:"p"},"Video_RGB_Buffer"),"\u7684\u4ee5\u4e0b\u653e\u7f6e\u4fe1\u606f\uff1a"),(0,o.kt)(l.Z,{mdxType:"CodeHeader"},"STM32F746G_DISCO.map"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{}),"BufferSection   0x00000000c00ff000    0x1c200\n *(Video_RGB_Buffer Video_RGB_Buffer.*)\n Video_RGB_Buffer\n                0x00000000c00ff000    0x1c200 Application/User/TouchGFX/target/generated/TouchGFXGeneratedHAL.o\n                0x00000000c00ff000                videoRGBBuffer\n")),(0,o.kt)("h3",k({},{id:"mdk-arm-keil"}),"MDK-ARM (Keil)"),(0,o.kt)(l.Z,{mdxType:"CodeHeader"},"STM32F746G_DISCO.sct"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{}),"LR_IROM1 0x08000000 0x00200000  {    ; load region size_region\n  ER_IROM1 0x08000000 0x00200000  {  ; load address = execution address\n    *.o (RESET, +First)\n    *(InRoot$$Sections)\n    .ANY (+RO)\n  }\n  RW_IRAM1 0x20000000 0x00050000  {  ; RW data\n    .ANY (+RW +ZI)\n  }\n  RW_SDRAM 0xC00FF000 UNINIT 0xC0700FFF  {\n    *.o (Video_RGB_Buffer)\n  }\n}\n")),(0,o.kt)("p",null,"Make sure to include the ",(0,o.kt)("inlineCode",{parentName:"p"},"UNINIT")," attribute in the section that holds the Video Buffer. This ensures leaving the memory region as uninitialized data. \u94fe\u63a5\u4e4b\u540e\uff0c",(0,o.kt)("inlineCode",{parentName:"p"},"MDK-ARM\\STM32F746G_DISCO\\STM32F746G_DISCO.map"),"\u5305\u542b",(0,o.kt)("inlineCode",{parentName:"p"},"Video_RGB_Buffer"),"\u7684\u4ee5\u4e0b\u653e\u7f6e\u4fe1\u606f\uff1a"),(0,o.kt)(l.Z,{mdxType:"CodeHeader"},"STM32F746G_DISCO.map"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{}),"Video_RGB_Buffer                         0xc00ff000   Section    115200  touchgfxgeneratedhal.o(Video_RGB_Buffer)\n")))}$.isMDXComponent=!0}}]);