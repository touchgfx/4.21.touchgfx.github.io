"use strict";(self.webpackChunktouchgfx_documentation=self.webpackChunktouchgfx_documentation||[]).push([[7418],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return g}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),h=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=h(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=h(n),g=a,c=d["".concat(s,".").concat(g)]||d[g]||p[g]||i;return n?r.createElement(c,o(o({ref:t},u),{},{components:n})):r.createElement(c,o({ref:t},u))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var h=2;h<i;h++)o[h]=n[h];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},44035:function(e,t,n){var r=n(67294),a=n(25026);t.Z=function(e){const t=e.noShadow||!1,n=e.width,i=e.height,o=(0,a.Z)(e.imageSource);return t?r.createElement("div",{className:"figure noshadow"},r.createElement("a",{href:o,target:"_blank"},r.createElement("img",{width:n,height:i,src:o})),r.createElement("p",null,e.children)):r.createElement("div",{className:"figure"},r.createElement("a",{href:o,target:"_blank"},r.createElement("img",{width:n,height:i,src:o})),r.createElement("p",null,e.children))}},88678:function(e,t,n){var r=n(67294);class a extends r.Component{render(){const e=`highlight highlight-${this.props.type}`;return r.createElement("div",{className:e},r.createElement("div",{className:"highlight-heading"},r.createElement("h5",null,r.createElement("div",{className:"highlight-icon"},this.props.icon),this.props.header)),r.createElement("div",{className:"highlight-content"},this.props.children))}}t.Z=a},93054:function(e,t,n){var r=n(67294),a=n(88678);const i=r.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},r.createElement("path",{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}));class o extends r.Component{render(){return r.createElement(a.Z,{color:"var(--highlight-color-note)",header:"Note",type:"note",icon:i},this.props.children)}}t.Z=o},44380:function(e,t,n){n.r(t),n.d(t,{assets:function(){return w},contentTitle:function(){return m},default:function(){return b},frontMatter:function(){return c},metadata:function(){return f},toc:function(){return k}});var r=n(3905),a=n(44035),i=n(93054),o=Object.defineProperty,l=Object.defineProperties,s=Object.getOwnPropertyDescriptors,h=Object.getOwnPropertySymbols,u=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,d=(e,t,n)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,g=(e,t)=>{for(var n in t||(t={}))u.call(t,n)&&d(e,n,t[n]);if(h)for(var n of h(t))p.call(t,n)&&d(e,n,t[n]);return e};const c={id:"svg",title:"SVG"},m=void 0,f={unversionedId:"development/ui-development/touchgfx-engine-features/svg",id:"development/ui-development/touchgfx-engine-features/svg",title:"SVG",description:"",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/development/ui-development/touchgfx-engine-features/svg.mdx",sourceDirName:"development/ui-development/touchgfx-engine-features",slug:"/development/ui-development/touchgfx-engine-features/svg",permalink:"/4.21/zh-CN/docs/development/ui-development/touchgfx-engine-features/svg",draft:!1,tags:[],version:"current",frontMatter:{id:"svg",title:"SVG"},sidebar:"docs",previous:{title:"MJPEG\u89c6\u9891",permalink:"/4.21/zh-CN/docs/development/ui-development/touchgfx-engine-features/video"},next:{title:"UI Components",permalink:"/4.21/zh-CN/docs/category/ui-components"}},w={},k=[{value:"What is SVG",id:"what-is-svg",level:2},{value:"Using SVGs with TouchGFX",id:"using-svgs-with-touchgfx",level:2},{value:"Example",id:"example",level:2},{value:"Target configuration",id:"target-configuration",level:3},{value:"Target performance and flash usage",id:"target-performance-and-flash-usage",level:3},{value:"Graphics Quality",id:"graphics-quality",level:3},{value:"Supported SVG elements",id:"supported-elements",level:2},{value:"Unsupported SVG elements",id:"unsupported-elements",level:2},{value:"Image Converter Warnings",id:"image-converter-warnings",level:3},{value:"Related articles",id:"related-articles",level:2}],v={toc:k};function b(e){var t,n=e,{components:o}=n,d=((e,t)=>{var n={};for(var r in e)u.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&h)for(var r of h(e))t.indexOf(r)<0&&p.call(e,r)&&(n[r]=e[r]);return n})(n,["components"]);return(0,r.kt)("wrapper",(t=g(g({},v),d),l(t,s({components:o,mdxType:"MDXLayout"}))),(0,r.kt)("p",null,"TouchGFX supports using SVG images starting from version 4.21. SVG images can be used to create user interfaces with vector graphics in combination with the traditional bitmap based graphics."),(0,r.kt)("p",null,"SVG images are included in the user interface through the ",(0,r.kt)("a",g({parentName:"p"},{href:"../ui-components/images/svg-image"}),"SVGImage Widget"),". This widget is available in the TouchGFX Designer and can be added to the user interface as any other widget."),(0,r.kt)("p",null,"SVG images are only supported on 16bpp or 24bpp frame buffers."),(0,r.kt)("h2",g({},{id:"what-is-svg"}),"What is SVG"),(0,r.kt)("p",null,"Scalable Vector Graphics, SVG, is an XML-based file format for defining 2D images through the use of a small set of graphics primitives. Some of the primitives are rectangles, circles, and curves. The primitives can be filled with a color or gradient. The outline (stroke) can also be drawn with a specific width."),(0,r.kt)("p",null,"The first big feature of SVG graphics is that it scalable. This means that the drawing specified is not only usable in a single resolution but can be scaled up or down without loosing quality. This is a big advantage compared to Bitmaps where artifacts are introduced when you scale up and details are lost when you scale down."),(0,r.kt)("p",null,"The second important feature of SVG graphics is that it is vector based. This means that an image is made up of a set of geometric figures like lines and circles that combines to make the drawing. This is in contrast to a bitmap image that basically defines a color value to all pixels in the image. The advantage of the vector definition is that the image in most cases are very small compared to bitmaps and that it is much more flexible. An image showing e.g. a few yellow ellipses can easily be changed in to am image consisting of green ellipses."),(0,r.kt)("p",null,"TouchGFX supports a subset of ",(0,r.kt)("a",g({parentName:"p"},{href:"https://www.w3.org/TR/SVGTiny12/index.html"}),"SVG Tiny 1.2"),". It is not possible to support the whole specification within the restrictions imposed by the hardware, the runtime environment, and the performance characteristics of TouchGFX."),(0,r.kt)("p",null,"SVG images can be created with many imaging tools, e.g. , or they can be written by hand. If you want to learn how to write your own SVG we recommend the introduction ",(0,r.kt)("a",g({parentName:"p"},{href:"https://www.w3schools.com/graphics/svg_intro.asp"}),"here"),"."),(0,r.kt)("h2",g({},{id:"using-svgs-with-touchgfx"}),"Using SVGs with TouchGFX"),(0,r.kt)("p",null,"SVG images are used in the same way as PNG images. The SVG files that you want to use in a project must be placed in the assets/images folder. The TouchGFX Image Converter and TouchGFX Designer read the images found in that folder."),(0,r.kt)("p",null,"SVG images are converted to CPP code and linked into the application. This CPP code is saved in the file ",(0,r.kt)("inlineCode",{parentName:"p"},"generated/images/src/SVGDatabase.cpp")),(0,r.kt)("p",null,"SVG images are used with the SVGImage widget. Either in code or in the TouchGFX Designer. This widget allows scaling, translation, and rotation of an SVG image."),(0,r.kt)("p",null,"The SVGImage widget is using another component, VectorRenderer, to perform the rendering."),(0,r.kt)(a.Z,{width:"70%",imageSource:"/img/development/ui-development/touchgfx-engine-features/svg/sw-blocks.webp",mdxType:"Figure"},"Software components when using SVG images"),(0,r.kt)("h2",g({},{id:"example"}),"Example"),(0,r.kt)("p",null,"As an example we will use this SVG:"),(0,r.kt)("pre",null,(0,r.kt)("code",g({parentName:"pre"},{}),'<?xml version="1.0" encoding="iso-8859-1"?>\n\n\n<svg xmlns="http://www.w3.org/2000/svg" width="100" height="100">\n  <circle cx="50" cy="50" r="40" fill="green" />\n  <polygon points="50,10 78,78 22,78" fill="gold" /> \n</svg>\n\n\n')),(0,r.kt)("p",null,"The SVG consists of a dark green circle with radius 40 and a yellow (golden) triangle."),(0,r.kt)("p",null,"As we see, SVG images are simple text files that can be modified with a normal text editor. SVG files can be opened with a long range of standard tools. The Chrome browser is one example of an SVG viewer."),(0,r.kt)("p",null,"The rendering of this SVG looks like this:"),(0,r.kt)(a.Z,{width:"25%",imageSource:"/img/development/ui-development/touchgfx-engine-features/svg/arrow.webp",mdxType:"Figure"},"Arrow SVG"),(0,r.kt)("p",null,"To use this SVG with TouchGFX we put the file (arrow.svg) in the ",(0,r.kt)("inlineCode",{parentName:"p"},"assets/images")," directory of our project. This is the same directory as the PNG-files and the images used by the TouchGFX Designer:"),(0,r.kt)(a.Z,{width:"70%",imageSource:"/img/development/ui-development/touchgfx-engine-features/svg/explorer.webp",mdxType:"Figure"},"SVG files are put in the assets/images folder"),(0,r.kt)("p",null,"In the TouchGFX Designer we can insert an SVGImage widget:"),(0,r.kt)(a.Z,{width:"70%",imageSource:"/img/development/ui-development/touchgfx-engine-features/svg/designer.webp",mdxType:"Figure"},"Inserting the SVGImage widget"),(0,r.kt)("p",null,"Using the properties of the SVGImage on the right, we can change the size of the widget and the scale:"),(0,r.kt)(a.Z,{width:"70%",imageSource:"/img/development/ui-development/touchgfx-engine-features/svg/designer2.webp",mdxType:"Figure"},"Showing the SVG arrow"),(0,r.kt)("p",null,'Note the "Fit Image To Size" check box. If you check it, the SVG is scaled to fit the size of the widget (and rotation is reset). This is a helper function that allows you to resize the SVG by dragging the corners of the Widget until the size fits your needs.'),(0,r.kt)(a.Z,{width:"70%",imageSource:"/img/development/ui-development/touchgfx-engine-features/svg/designer3.webp",mdxType:"Figure"},"Showing the SVG arrow three times"),(0,r.kt)("p",null,"To do the rotation as above it is important to set the rotation center. The default values are x=0, y=0, the upper left corner of the Widget. If we use this rotation center and rotate the SVG, it rotates clock-wise out to the left of the SVGImage Widget as illustrated in the figure below:"),(0,r.kt)(a.Z,{width:"40%",imageSource:"/img/development/ui-development/touchgfx-engine-features/svg/rotating-clipping.webp",mdxType:"Figure"},"Showing the SVG arrow rotated 45 degrees around 0,0"),(0,r.kt)("p",null,"The parts of an SVG that are outside the SVGImage are clipped (not shown) as illustrated by the above figure. The gray rectangle represents SVGImage. Anything outside the gray area is not draw. To rotate the SVG inside the SVGImage we must set the rotation center to the center of the widget (50, 50)."),(0,r.kt)("p",null,"See also the later section on transformation details."),(0,r.kt)("h3",g({},{id:"target-configuration"}),"Target configuration"),(0,r.kt)("p",null,"To use SVG images on a target you need to have Vector Rendering enabled in CubeMX. This inserts the required code in the project to create the Vector Renderer that is required by SVGImage."),(0,r.kt)(i.Z,{mdxType:"Note"},"Vector Rendering is enabled in all TouchGFX Boards Specifications available in the TouchGFX Designer (except STM32G0)."),(0,r.kt)("p",null,"If Vector Rendering is not enabled you will get a linker error (",(0,r.kt)("em",{parentName:"p"},"undefined reference to `touchgfx::VectorRenderer::getInstance()"),") when building the project:"),(0,r.kt)(a.Z,{width:"100%",imageSource:"/img/development/ui-development/touchgfx-engine-features/svg/designer4.webp",mdxType:"Figure"},"Linker error when Vector Rendering is not enabled"),(0,r.kt)("p",null,"This problem is resolved by changing the configuration in CubeMX. See also the ",(0,r.kt)("a",g({parentName:"p"},{href:"../../touchgfx-hal-development/generator-how-to/touchgfx-al-configuration/additional-features#vector-rendering"}),"Generator User Guide")),(0,r.kt)("p",null,"SVG images are automatically included in the target project as C++ code, so no further action is required."),(0,r.kt)("p",null,"As rendering times for SVG images can be considerably higher than the bitmaps, we recommend use of double buffering (or single buffering with displays with embedded GRAM). Single frame buffer can be used, but the rendering time and display tearing should be monitored. Read more about using one frame buffer ",(0,r.kt)("a",g({parentName:"p"},{href:"../../../basic-concepts/rendering#one-framebuffer"}),"here"),"."),(0,r.kt)("h3",g({},{id:"target-performance-and-flash-usage"}),"Target performance and flash usage"),(0,r.kt)("p",null,"The size of the generated SVG data for the arrow is below 350 bytes. This shows one of the benefits using SVG compared to bitmaps. The size of the arrow as a bitmap in size 100x100 would be 30.000 bytes in 24bit colors. The size of the SVG is thus close to 1% of the size of bitmap."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",g({parentName:"tr"},{align:null}),"Image Type"),(0,r.kt)("th",g({parentName:"tr"},{align:null}),"Flash usage"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",g({parentName:"tr"},{align:null}),"Bitmap"),(0,r.kt)("td",g({parentName:"tr"},{align:null}),"30.000 bytes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",g({parentName:"tr"},{align:null}),"SVG"),(0,r.kt)("td",g({parentName:"tr"},{align:null}),"350 bytes")))),(0,r.kt)("p",null,"The use of SVG images adds 5-10K of extra code in the application."),(0,r.kt)("p",null,"The downside of using SVGs is the performance of drawing the SVG images which is worse than bitmaps in most cases. The rendering of an SVG depends on the number of elements in the SVG and has no upper limit. Rendering of a bitmap depends on the resolution and alpha blending, and has an upper limit.",(0,r.kt)("br",{parentName:"p"}),"\n","Secondly SVG images are rendered with a high use of software rendering so the CPU-load is high. Bitmaps on the other hand can be rendered exclusively by the DMA2D accelerator which gives a low CPU-load."),(0,r.kt)("p",null,"The render time of the SVG arrow is 1.32ms on the STM32F746 (frame buffer in external RAM) which is very usable. Faster MCUs from the H7 series will give lower rendering times. The rendering time increases when the SVG is scaled up (more pixels to render), while rotation does not add substantially. The picture shows the arrow on an STM32F746 Discovery kit:"),(0,r.kt)(a.Z,{width:"70%",imageSource:"/img/development/ui-development/touchgfx-engine-features/svg/performance.webp",mdxType:"Figure"},"Showing the SVG arrow on a F746 Discovery kit"),(0,r.kt)("p",null,"The left-most picture shows no SVG, but just a green Box background. The middle shows the arrow in scale 1. The right-most shows the arrow in scale 2. The rendering times for the full frame and just the SVG are shown below:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",g({parentName:"tr"},{align:null}),"Screen"),(0,r.kt)("th",g({parentName:"tr"},{align:null}),"Rendering time"),(0,r.kt)("th",g({parentName:"tr"},{align:null}),"Just SVG"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",g({parentName:"tr"},{align:null}),"Left"),(0,r.kt)("td",g({parentName:"tr"},{align:null}),"2.96 ms"),(0,r.kt)("td",g({parentName:"tr"},{align:null}),"N/A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",g({parentName:"tr"},{align:null}),"Middle"),(0,r.kt)("td",g({parentName:"tr"},{align:null}),"4.28 ms"),(0,r.kt)("td",g({parentName:"tr"},{align:null}),"1.32 ms")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",g({parentName:"tr"},{align:null}),"Right"),(0,r.kt)("td",g({parentName:"tr"},{align:null}),"6.37 ms"),(0,r.kt)("td",g({parentName:"tr"},{align:null}),"3.41 ms")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",g({parentName:"tr"},{align:null}),"Rotated"),(0,r.kt)("td",g({parentName:"tr"},{align:null}),"6.53 ms"),(0,r.kt)("td",g({parentName:"tr"},{align:null}),"3.57 ms")))),(0,r.kt)("p",null,"The last row shows the rendering time with the arrow rotated 77 degrees. We see that rotation affects the rendering time insignificantly."),(0,r.kt)("h3",g({},{id:"graphics-quality"}),"Graphics Quality"),(0,r.kt)("p",null,"The picture below shows a project running on an STM32F746 Discovery kit:"),(0,r.kt)(a.Z,{width:"70%",imageSource:"/img/development/ui-development/touchgfx-engine-features/svg/f746.webp",mdxType:"Figure"},"Showing the SVG arrows on a F746 Discovery kit"),(0,r.kt)("p",null,"In this project we have used the same SVG in multiple SVGImage widgets."),(0,r.kt)("p",null,"On the right size of the photo we have inserted zoomed details from the frame buffer (the three arrow heads). This shows that the lines in the SVG drawing are all anti-aliased, even when rotated and scaled. This is the main reason to use SVG images: Preservation of quality during rotation and scaling."),(0,r.kt)("h2",g({},{id:"supported-elements"}),"Supported SVG elements"),(0,r.kt)("p",null,"TouchGFX does not implement the whole SVG Tiny 1.2 standard. The image converter in TouchGFX that reads the .svg files will give you a warning if you use any of the unsupported elements or attributes. The important missing parts radial gradient, texts, and animations."),(0,r.kt)("p",null,"TouchGFX supports the following SVG elements. The examples show the supported attributes of the element:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Rectangle ","<",'rect x="10" y="20" width="100" height="200" rx="5" ry="40" /',">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Circle ","<",'circle cx="100" cy="200" r="20" /',">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Ellipse ","<",'ellipse cx="100" cy="200" rx="20" ry="30" /',">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Line ","<",'line x1="10" y1="10" x2="300" y2="150 /',">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Path ","<",'path d="M100 100L75 200h50z" /',">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Polygon ","<",'polygon points="10,10 30,30 10,90" /',">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Polyline ","<",'polyline points="10,10 30,30 10,90" /',">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"LinearGradient ","<",'lineargradient id="grad1" gradientUnits="objectBoundingBox" x1="0%" y1="0%" x2="100%" y2="100%" /',">"))),(0,r.kt)("p",null,"These structural elements are also supported"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Group ","<","g  /",">"),(0,r.kt)("li",{parentName:"ul"},"Defs ","<","defs  /",">")),(0,r.kt)("p",null,"TouchGFX supports all the shape transformations: matrix, translate, scale, rotate, skewX, skewY."),(0,r.kt)("p",null,"The linear gradients must be defined inside a ","<","defs",">"," element."),(0,r.kt)("p",null,"For the ","<","path",">"," element TouchGFX supports all the path commands: M, m, L, l, H, h, V, v, C, c, S, s, Q, q, T, t, A, a."),(0,r.kt)("p",null,"Filling and stroking is supported."),(0,r.kt)("h2",g({},{id:"unsupported-elements"}),"Unsupported SVG elements"),(0,r.kt)("p",null,"TouchGFX does not support the following elements:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Animations ","<","animate",">",", ","<","animateColor",">",", ","<","animateMotion",">",", ","<","animateTransform",">",", ","<","discard",">",", ","<","handler",">",", ","<","listener",">",", ","<","mpath",">",", ","<","script",">",", ","<","set",">",", ","<","switch",">"),(0,r.kt)("li",{parentName:"ul"},"Audio ","<","audio /",">"),(0,r.kt)("li",{parentName:"ul"},"ClipPath ","<","clipPath id=.... /",">"),(0,r.kt)("li",{parentName:"ul"},"Desc ","<","desc /",">"),(0,r.kt)("li",{parentName:"ul"},"Filter ","<","filter",">"),(0,r.kt)("li",{parentName:"ul"},"Foreign Object ","<","foreignObject",">"),(0,r.kt)("li",{parentName:"ul"},"Gradient transform ","<",'linearGradient gradientTransform="..." /',">",", ","<","prefetch",">"),(0,r.kt)("li",{parentName:"ul"},"Radial gradient ","<","radialGradient ...  /",">"),(0,r.kt)("li",{parentName:"ul"},"Solid color ","<","solidColor",">"),(0,r.kt)("li",{parentName:"ul"},"Stroke dasharray property ","<",'path stroke-dasharray="10,10" ... /',">"),(0,r.kt)("li",{parentName:"ul"},"Text and fonts ","<","font",">",", ","<","glyph",">",", ","<","text",">",", ","<","hkern",">",", ","<","missing-glyph",">",", ","<","tbreak",">",", ","<","textArea",">",", ","<","tspan",">"),(0,r.kt)("li",{parentName:"ul"},"Use ","<","use",">"),(0,r.kt)("li",{parentName:"ul"},"Image ","<","image",">"),(0,r.kt)("li",{parentName:"ul"},"Video ","<","video",">")),(0,r.kt)("p",null,"Metadata and title elements are ignored."),(0,r.kt)("h3",g({},{id:"image-converter-warnings"}),"Image Converter Warnings"),(0,r.kt)("p",null,"The TouchGFX Image Converter will print a warning or error if you use an unsupported element or attributes. As an example we can put text of the arrow:"),(0,r.kt)("pre",null,(0,r.kt)("code",g({parentName:"pre"},{}),'<?xml version="1.0" encoding="iso-8859-1"?>\n\n\n<svg xmlns="http://www.w3.org/2000/svg" width="100" height="100">\n  <circle cx="50" cy="50" r="40" fill="green" />\n  <polygon points="50,10 78,78 22,78" fill="gold" /> \n</svg>\n\n\n')),(0,r.kt)("p",null,"The TouchGFX Designer runs the Image Converter on the .svg file and shows the error:"),(0,r.kt)(a.Z,{width:"90%",imageSource:"/img/development/ui-development/touchgfx-engine-features/svg/designer5.webp",mdxType:"Figure"},"Error when using the unsupported SVG <text> element"),(0,r.kt)("p",null,"The error output shows which SVG file contains the error, in which line the problem is found, and which unsupported elements was used."),(0,r.kt)("h2",g({},{id:"related-articles"}),"Related articles"),(0,r.kt)("p",null,"As mentioned above the vector graphics support for target project is configured in the TouchGFX Generator.  See the ",(0,r.kt)("a",g({parentName:"p"},{href:"../../touchgfx-hal-development/generator-how-to/touchgfx-al-configuration/additional-features#vector-rendering"}),"Generator User Guide")," for instructions."),(0,r.kt)("p",null,"The SVGImage widget is available in the Designer. The use of SVGImage widget in the Designer is detailed ",(0,r.kt)("a",g({parentName:"p"},{href:"../ui-components/images/svg-image"}),"here"),"."))}b.isMDXComponent=!0}}]);