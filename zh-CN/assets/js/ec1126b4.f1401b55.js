"use strict";(self.webpackChunktouchgfx_documentation=self.webpackChunktouchgfx_documentation||[]).push([[8908],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=i.createContext({}),p=function(e){var t=i.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return i.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},s=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,d=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),s=p(n),m=a,f=s["".concat(d,".").concat(m)]||s[m]||u[m]||r;return n?i.createElement(f,l(l({ref:t},c),{},{components:n})):i.createElement(f,l({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=s;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var p=2;p<r;p++)l[p]=n[p];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}s.displayName="MDXCreateElement"},22425:function(e,t,n){var i=n(67294);class a extends i.Component{render(){return i.createElement("div",{className:"code-header"},i.createElement("div",null,i.createElement("h5",null,this.props.children)))}}t.Z=a},88678:function(e,t,n){var i=n(67294);class a extends i.Component{render(){const e=`highlight highlight-${this.props.type}`;return i.createElement("div",{className:e},i.createElement("div",{className:"highlight-heading"},i.createElement("h5",null,i.createElement("div",{className:"highlight-icon"},this.props.icon),this.props.header)),i.createElement("div",{className:"highlight-content"},this.props.children))}}t.Z=a},93054:function(e,t,n){var i=n(67294),a=n(88678);const r=i.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},i.createElement("path",{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}));class l extends i.Component{render(){return i.createElement(a.Z,{color:"var(--highlight-color-note)",header:"Note",type:"note",icon:r},this.props.children)}}t.Z=l},94279:function(e,t,n){n.r(t),n.d(t,{assets:function(){return v},contentTitle:function(){return g},default:function(){return B},frontMatter:function(){return h},metadata:function(){return b},toc:function(){return y}});var i=n(3905),a=n(39130),r=n(93054),l=n(22425),o=Object.defineProperty,d=Object.defineProperties,p=Object.getOwnPropertyDescriptors,c=Object.getOwnPropertySymbols,u=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,m=(e,t,n)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,f=(e,t)=>{for(var n in t||(t={}))u.call(t,n)&&m(e,n,t[n]);if(c)for(var n of c(t))s.call(t,n)&&m(e,n,t[n]);return e};const h={id:"loading-images-at-runtime",title:"\u52a8\u6001\u52a0\u8f7d\u56fe\u50cf"},g=void 0,b={unversionedId:"development/ui-development/scenarios/loading-images-at-runtime",id:"development/ui-development/scenarios/loading-images-at-runtime",title:"\u52a8\u6001\u52a0\u8f7d\u56fe\u50cf",description:"",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/development/ui-development/scenarios/loading-images-at-runtime.mdx",sourceDirName:"development/ui-development/scenarios",slug:"/development/ui-development/scenarios/loading-images-at-runtime",permalink:"/4.21/zh-CN/docs/development/ui-development/scenarios/loading-images-at-runtime",draft:!1,tags:[],version:"current",frontMatter:{id:"loading-images-at-runtime",title:"\u52a8\u6001\u52a0\u8f7d\u56fe\u50cf"},sidebar:"docs",previous:{title:"\u7528\u53ef\u7f13\u5b58\u5bb9\u5668\u5b9e\u73b0\u66f4\u4f18\u6027\u80fd",permalink:"/4.21/zh-CN/docs/development/ui-development/scenarios/achieving-better-performance-with-cacheable-container"},next:{title:"\u4f7f\u7528L8\u56fe\u50cf\u683c\u5f0f\u51cf\u5c11\u5b58\u50a8\u7a7a\u95f4\u6d88\u8017",permalink:"/4.21/zh-CN/docs/development/ui-development/scenarios/using-the-l8-image-format-to-reduce-memory-consumption"}},v={},y=[{value:"\u52a0\u8f7dBMP\u6587\u4ef6\u793a\u4f8b",id:"loading-bmp-file-example",level:2},{value:"BMP\u52a0\u8f7d\u5668",id:"the-bmp-loader",level:3},{value:"\u4e3a\u52a8\u6001\u4f4d\u56fe\u914d\u7f6e\u5185\u5b58",id:"configure-memory-for-dynamic-bitmaps",level:2},{value:"\u6b63\u5728\u52a0\u8f7dJPEG\u6587\u4ef6",id:"loading-jpeg-files",level:2}],x={toc:y};function B(e){var t,o=e,{components:m}=o,h=((e,t)=>{var n={};for(var i in e)u.call(e,i)&&t.indexOf(i)<0&&(n[i]=e[i]);if(null!=e&&c)for(var i of c(e))t.indexOf(i)<0&&s.call(e,i)&&(n[i]=e[i]);return n})(o,["components"]);return(0,i.kt)("wrapper",(t=f(f({},x),h),d(t,p({components:m,mdxType:"MDXLayout"}))),(0,i.kt)("p",null,"\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u5728TouchGFX\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4ece\u6587\u4ef6\u52a0\u8f7d\u56fe\u50cf\u7684\u4e00\u79cd\u65b9\u6cd5\u3002"),(0,i.kt)("p",null,"\u5728TouchGFX\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u4f4d\u56fe\u7684\u6807\u51c6\u7a0b\u5e8f\u662f\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5305\u542b\u4f4d\u56fe\u3002 PNG\u6587\u4ef6\u4f1a\u88ab\u8f6c\u6362\u4e3a.cpp\u6587\u4ef6\u4e2d\u7684\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u5e76\u7f16\u8bd1\u94fe\u63a5\u5230\u5e94\u7528\u7a0b\u5e8f\u4e2d\u3002 \u8fd9\u662f\u4e00\u79cd\u5e94\u7528\u7a0b\u5e8f\u53ef\u7528\u5728\u8fd0\u884c\u65f6\u4f7f\u4f4d\u56fe\u5bf9\u7684\u7b80\u5355\u65b9\u6cd5\u3002"),(0,i.kt)("p",null,"\u5728\u67d0\u4e9b\u5e94\u7528\u4e2d\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u6216\u4e0d\u5b9e\u9645\u7684\u3002 \u4f8b\u5982\uff0c\u5f53\u56fe\u50cf\u5728\u7f16\u8bd1\u65f6\u4e0d\u53ef\u7528(\u53ef\u80fd\u7a0d\u540e\u901a\u8fc7\u4e92\u8054\u7f51\u8fde\u63a5\u4e0b\u8f7d)\uff0c\u6216\u8005\u5f53\u60a8\u7684\u5e94\u7528\u7a0b\u5e8fFlash\u7a7a\u95f4\u4e0d\u8db3\u4ee5\u653e\u5165\u592a\u591a\u4f4d\u56fe\u65f6\u3002"),(0,i.kt)("p",null,"\u9488\u5bf9\u8be5\u95ee\u9898\uff0c\u52a8\u6001\u4f4d\u56fe(\u89c1\u4ee5\u4e0b\u94fe\u63a5)\u662f\u4e00\u4e2a\u57fa\u4e8eRAM\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u52a8\u6001\u4f4d\u56fe\u5728\u8fd0\u884c\u65f6\u521b\u5efa\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u81ea\u7531\u51b3\u5b9a\u4f4d\u56fe\u7684\u6570\u91cf\u3001\u683c\u5f0f\u3001\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u3002"),(0,i.kt)("p",null,"\u7531\u4e8e\u52a8\u6001\u4f4d\u56fe\u5b58\u50a8\u5728RAM\u4e2d(\u4f4d\u56fe\u7f13\u5b58\u5185)\uff0c\u5e94\u7528\u7a0b\u5e8f\u5fc5\u987b\u5728\u521b\u5efa\u52a8\u6001\u4f4d\u56fe\u540e\u5c06\u50cf\u7d20\u503c\u4ece\u6e90\u590d\u5236\u5230\u52a8\u6001\u4f4d\u56fe\u4e2d\u3002 \u521b\u5efa\u540e\uff0c\u52a8\u6001\u4f4d\u56fe\u5305\u542b\u672a\u521d\u59cb\u5316\u7684\u50cf\u7d20\u3002"),(0,i.kt)("p",null,"\u672c\u8282\u63cf\u8ff0\u5982\u4f55\u4f7f\u7528\u52a8\u6001\u4f4d\u56fe\u521b\u5efa\u5e94\u7528\uff0c\u5176\u4e2d\u7684\u4e00\u4e9b\u56fe\u5f62\u5185\u5bb9\u8bfb\u81eaBMP\u6587\u4ef6\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u7528\u4f8b\u662f\u663e\u793aSD\u5361\u4e2dBMP\u6587\u4ef6\u7684\u5e94\u7528\u7a0b\u5e8f\u3002"),(0,i.kt)(r.Z,{mdxType:"Note"},"\u8bf7\u5148\u9605\u8bfb",(0,i.kt)(a.Z,{to:"../touchgfx-engine-features/dynamic-bitmaps",mdxType:"Link"},"\u52a8\u6001\u4f4d\u56fe"),"\u3002"),(0,i.kt)("p",null,"\u6ce8\u610f\uff0c\u6807\u51c6\u4f4d\u56fe\u4f1a\u88ab\u7f16\u8bd1\u5230\u5e94\u7528\u4e2d\uff0c\u56e0\u6b64\u5fc5\u987b\u5728\u7f16\u8bd1\u65f6\u63d0\u4f9b\u3002 \u52a8\u6001\u4f4d\u56fe\u7279\u6027\u5141\u8bb8\u5728\u8fd0\u884c\u65f6\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u56fe\u50cf\uff0c\u751a\u81f3\u53ef\u4ee5\u901a\u8fc7\u4e92\u8054\u7f51\u8fde\u63a5\u4e0b\u8f7d\u56fe\u50cf\u3002"),(0,i.kt)("h2",f({},{id:"loading-bmp-file-example"}),"\u52a0\u8f7dBMP\u6587\u4ef6\u793a\u4f8b"),(0,i.kt)("p",null,"\u4e0b\u9762\u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528BMP\u52a0\u8f7d\u5668\u4eceWindows BMP\u6587\u4ef6\u52a0\u8f7d\u50cf\u7d20\u6570\u636e\u3002 \u6587\u7ae0\u540e\u9762\u5c06\u63d0\u4f9b\u52a0\u8f7d\u5668\u4ee3\u7801\u3002"),(0,i.kt)("p",null,"\u9996\u5148\u5728\u89c6\u56fe\u4e2d\u63d2\u5165\u56fe\u50cf\u63a7\u4ef6\u3002 \u6b64\u63a7\u4ef6\u7528\u4e8e\u663e\u793aBMP\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",f({parentName:"pre"},{className:"language-cpp"}),"class TemplateView : public View\n{\nprivate:\n    Image image;\n}\n")),(0,i.kt)("p",null,"\u5728 setupScreen\u4e2d\u52a0\u8f7d\u56fe\u50cf\u6570\u636e\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",f({parentName:"pre"},{className:"language-cpp",metastring:"{7-8,13-14}","{7-8,13-14}":!0}),'void TemplateView::setupScreen()\n{\n    FILE* f = fopen("image.jpg", "rb");\n    uint16_t width, height;\n\n    //Get the image dimensions from the BMP file\n    BMPFileLoader::getBMP24Dimensions(f, width, height);\n    BitmapId bmpId;\n\n    //Create (16bit) dynamic bitmap of same dimension\n    bmpId = Bitmap::dynamicBitmapCreate(width, height, Bitmap::RGB565);\n\n    //Load pixels from BMP file to dynamic bitmap\n    BMPFileLoader::readBMP24File(Bitmap(bmpId), f);\n\n    //Make Image show the loaded bitmap\n    image.setBitmap(Bitmap(bmpId));\n\n    //Position image and add to View\n    image.setXY(20, 20);\n    add(image);\n    ...\n}\n')),(0,i.kt)("h3",f({},{id:"the-bmp-loader"}),"BMP\u52a0\u8f7d\u5668"),(0,i.kt)("p",null,"\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684BMP\u6587\u4ef6\u52a0\u8f7d\u5668\u7684\u4ee3\u7801\u3002 \u5b83\u4ec5\u652f\u630124bpp BMP\u6587\u4ef6\u3002  \u60a8\u53ef\u80fd\u9700\u8981\u8c03\u6574\u6587\u4ef6\u7cfb\u7edf\u8c03\u7528\u90e8\u5206\uff0c\u4ee5\u9002\u5e94\u60a8\u7684\u7cfb\u7edf\u3002"),(0,i.kt)(l.Z,{mdxType:"CodeHeader"},"BMPFileLoader.hpp"),(0,i.kt)("pre",null,(0,i.kt)("code",f({parentName:"pre"},{className:"language-cpp"}),"#include <touchgfx/hal/Types.hpp>\n#include <touchgfx/Bitmap.hpp>\n\nusing namespace touchgfx;\n\nclass BMPFileLoader\n{\npublic:\n    typedef void* FileHdl;\n\n    static void getBMP24Dimensions(FileHdl fileHandle, uint16_t& width, uint16_t& height);\n    static void readBMP24File(Bitmap bitmap, FileHdl fileHandle);\nprivate:\n    static int readFile(FileHdl hdl, uint8_t* const buffer, uint32_t length);\n    static void seekFile(FileHdl hdl, uint32_t offset);\n};\n")),(0,i.kt)(l.Z,{mdxType:"CodeHeader"},"BMPFileLoader.cpp"),(0,i.kt)("pre",null,(0,i.kt)("code",f({parentName:"pre"},{className:"language-cpp"}),'#include <gui/common/BMPFileLoader.hpp>\n#include <platform/driver/lcd/LCD16bpp.hpp>\n#include <touchgfx/Color.hpp>\n\nint BMPFileLoader::readFile(FileHdl hdl, uint8_t* const buffer, uint32_t length)\n{\n    uint32_t r = fread(buffer, 1, length, (FILE*)hdl);\n    if (r != length)\n    {\n        return 1;\n    }\n    return 0;\n}\n\nvoid BMPFileLoader::seekFile(FileHdl hdl, uint32_t offset)\n{\n    fseek((FILE*)hdl, offset, SEEK_SET);\n}\n\nvoid BMPFileLoader::getBMP24Dimensions(FileHdl fileHandle, uint16_t& width, uint16_t& height)\n{\n    uint8_t data[50];\n    seekFile(fileHandle, 0);\n    readFile(fileHandle, data, 26); //read first part of header.\n\n    width = data[18] | (data[19] << 8) | (data[20] << 16) | (data[21] << 24);\n    height = data[22] | (data[23] << 8) | (data[24] << 16) | (data[25] << 24);\n}\n\nvoid BMPFileLoader::readBMP24File(Bitmap bitmap, FileHdl fileHandle)\n{\n    uint8_t data[50];\n    seekFile(fileHandle, 0);\n    readFile(fileHandle, data, 26); //read first part of header.\n\n    const uint32_t offset = data[10] | (data[11] << 8) | (data[12] << 16) | (data[12] << 24);\n    const uint32_t width = data[18] | (data[19] << 8) | (data[20] << 16) | (data[21] << 24);\n    const uint32_t height = data[22] | (data[23] << 8) | (data[24] << 16) | (data[25] << 24);\n\n    readFile(fileHandle, data, offset - 26); //read rest of header.\n\n    //get dynamic bitmap boundaries\n    const uint32_t buffer_width = bitmap.getWidth();\n    const uint32_t buffer_height = bitmap.getHeight();\n\n    const uint32_t rowpadding = (4 - ((width * 3) % 4)) % 4;\n\n    const Bitmap::BitmapFormat format = bitmap.getFormat();\n    uint8_t* const  buffer8  = Bitmap::dynamicBitmapGetAddress(bitmap.getId());\n    uint16_t* const buffer16 = (uint16_t*)buffer8;\n\n    for (uint32_t y = 0; y < height; y++)\n    {\n        for (uint32_t x = 0; x < width; x++)\n        {\n            if (x % 10 == 0) //read data every 10 pixels = 30 bytes\n            {\n                if (x + 10 <= width) //read 10\n                {\n                    readFile(fileHandle, data, 10 * 3); //10 pixels\n                }\n                else\n                {\n                    readFile(fileHandle, data, (width - x) * 3 + rowpadding); //rest of line\n                }\n            }\n            //insert pixel, if within dynamic bitmap boundaries\n            if (x < buffer_width && ((height - y - 1) < buffer_height))\n            {\n                switch (format)\n                {\n                case Bitmap::RGB565:\n                    buffer16[x + (height - y - 1) * buffer_width] =\n                        LCD16bpp::getNativeColorFromRGB(data[(x % 10) * 3 + 2], data[(x % 10) * 3 + 1], data[(x % 10) * 3]);\n                    break;\n                case Bitmap::RGB888:\n                    {\n                        //24 bit framebuffer\n                        const uint32_t inx = 3 * (x + (height - y - 1) * buffer_width);\n                        buffer8[inx + 0] = data[(x % 10) * 3 + 0];\n                        buffer8[inx + 1] = data[(x % 10) * 3 + 1];\n                        buffer8[inx + 2] = data[(x % 10) * 3 + 2];\n                        break;\n                    }\n                case Bitmap::ARGB8888:\n                    {\n                        //24 bit framebuffer\n                        const uint32_t inx = 4 * (x + (height - y - 1) * buffer_width);\n                        buffer8[inx + 0] = data[(x % 10) * 3 + 0];\n                        buffer8[inx + 1] = data[(x % 10) * 3 + 1];\n                        buffer8[inx + 2] = data[(x % 10) * 3 + 2];\n                        buffer8[inx + 3] = 255; //solid\n                        break;\n                    }\n                default:\n                    assert(!"Unsupported bitmap format in BMPFileLoader!");\n                }\n            }\n        }\n    }\n}\n')),(0,i.kt)("p",null,"\u6b64\u4ee3\u7801\u7528\u4e8e\u529f\u80fd\u8bf4\u660e\u3002 \u6709\u4e00\u4e2a\u66f4\u4f18\u7684RGB888\u8bfb\u53d6\u5668\u53ef\u4ee5\u4ece\u6587\u4ef6\u76f4\u63a5\u8bfb\u53d6\u6570\u636e\u5230\u52a8\u6001\u4f4d\u56fe\u5b58\u50a8\u5185\u5b58\u4e2d\uff08\u6ce8\u610f\u8df3\u8fc7\u884c\u586b\u5145\u5b57\u7b26\uff09\u3002 \u4e0a\u9762\u7684\u8bfb\u53d6\u5668\u4eceBMP\u6587\u4ef6\u4e2d\u5c0610\u4e2a\u50cf\u7d20\u7684\u6570\u636e\u8bfb\u5230\u4e86\u4e34\u65f6\u7f13\u51b2\u533a\u3002 \u7136\u540e\u8f6c\u6362\u6210\u6b63\u786e\u683c\u5f0f\uff0c\u518d\u590d\u5236\u5230\u4f4d\u56fe\u3002"),(0,i.kt)("h2",f({},{id:"configure-memory-for-dynamic-bitmaps"}),"\u4e3a\u52a8\u6001\u4f4d\u56fe\u914d\u7f6e\u5185\u5b58"),(0,i.kt)("p",null,"\u60a8\u5fc5\u987b\u5148\u914d\u7f6eTouchGFX\uff0c\u7136\u540e\u624d\u80fd\u521b\u5efa\u548c\u4f7f\u7528\u52a8\u6001\u4f4d\u56fe\u3002 \u5fc5\u987b\u5148\u63d0\u4f9b\u4e00\u4e2a\u7f13\u51b2\u533a\u548c\u6700\u5927\u52a8\u6001\u4f4d\u56fe\u6570\u91cf\uff08\u4e5f\u9002\u7528\u4e8e\u4eff\u771f\u5668\uff09\u3002"),(0,i.kt)("p",null,"\u4e0b\u9762\u662f\u4e00\u4e2aSTM32F7xx\u7684\u793a\u4f8b\uff0c\u8fd9\u91cc\u6211\u4eec\u5728\u5916\u90e8RAM\u4e2d\u5206\u914d\u4e86\u7f13\u51b2\u533a\uff1a\u6211\u4eec\u60f3\u8981\u52a0\u8f7d\u5e76\u663e\u793a\u5c3a\u5bf8\u4e3a320x240\u768424\u4f4d\u4f4d\u56fe\u3002 \u56e0\u6b64\uff0c\u9700\u8981\u7684\u5b58\u50a8\u7a7a\u95f4\u4e3a320x240x3 = 230400\u3002 \u6211\u4eec\u8fd8\u9700\u8981\u4e00\u70b9\u7a7a\u95f4\u7528\u4e8e\u5176\u5b83\u5f00\u9500\uff0c\u56e0\u6b64\u4e3a\u7f13\u51b2\u533a\u5206\u914d\u4e86232000\u5b57\u8282\u3002"),(0,i.kt)(l.Z,{mdxType:"CodeHeader"},"FrontendApplication.cpp (extract)"),(0,i.kt)("pre",null,(0,i.kt)("code",f({parentName:"pre"},{className:"language-cpp",metastring:"{2-2,8-8}","{2-2,8-8}":!0}),"#include <gui/common/FrontendApplication.hpp>\n#include <touchgfx/Bitmap.hpp>\n\nFrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)\n    : FrontendApplicationBase(m, heap)\n{\n    static uint32_t bmpCache = (uint32_t)(0xC00C0000); // SDRAM\n    Bitmap::setCache((uint16_t*)bmpCache, 232000, 1);\n}\n")),(0,i.kt)("p",null,"\u6700\u540e\u7684\u53c2\u6570\u662f\u52a8\u6001\u4f4d\u56fe\u7684\u6700\u5927\u6570\u91cf\uff0c\u53ef\u6839\u636e\u60a8\u7684\u9700\u6c42\u8fdb\u884c\u8c03\u6574\u3002 \u6ce8\u610f\uff0c\u5728\u8bb8\u591a\u5e73\u53f0\u4e0a\uff0c\u5e27\u7f13\u51b2\u4e5f\u4fdd\u5b58\u5728\u5916\u90e8RAM\u4e2d\u3002 \u786e\u4fdd\u6ca1\u6709\u5c06\u4f4d\u56fe\u7f13\u5b58\u653e\u5728\u91cd\u53e0\u5b58\u50a8\u533a\u3002"),(0,i.kt)(r.Z,{mdxType:"Note"},"\u6ce8\u610f\uff0c\u5982\u679c\u5b58\u50a8\u7a7a\u95f4\u4e0d\u591f\uff0cdynamicBitmapCreate\u8fd4\u56de\u7684BitmapId\u5c06\u662fBITMAP_INVALID\u3002"),(0,i.kt)("h2",f({},{id:"loading-jpeg-files"}),"\u6b63\u5728\u52a0\u8f7dJPEG\u6587\u4ef6"),(0,i.kt)("p",null,"\u5728",(0,i.kt)("a",{target:"_blank",href:n(8727).Z},"\u8fd9\u91cc\u53ef\u4ee5\u627e\u5230"),"\u4e00\u4e2aJPEG\u6587\u4ef6\u52a0\u8f7d\u5668\u793a\u4f8b\uff0c\u5b83\u5c55\u793a\u4e86\u5982\u4f55\u901a\u8fc7LibJPEG\u4f7f\u7528JPEG\u6587\u4ef6\u3002 \u5b83\u4f7f\u7528\u4e86\u4e00\u4e2a\u4e0e\u4e0a\u9762\u7684BMPFileLoader\u76f8\u4f3c\u7684JPEGLoader\u7c7b\u3002"))}B.isMDXComponent=!0},8727:function(e,t,n){t.Z=n.p+"assets/files/jpeg-file-loader-4ee676d38cdfca7ef2583412712b6bf1.zip"}}]);