"use strict";(self.webpackChunktouchgfx_documentation=self.webpackChunktouchgfx_documentation||[]).push([[1218],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||r;return n?o.createElement(h,i(i({ref:t},p),{},{components:n})):o.createElement(h,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<r;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},70814:function(e,t,n){var o=n(67294),a=n(88678);const r=o.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},o.createElement("path",{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}));class i extends o.Component{render(){return o.createElement(a.Z,{color:"var(--highlight-color-caution)",header:"Caution",type:"caution",icon:r},this.props.children)}}t.Z=i},22425:function(e,t,n){var o=n(67294);class a extends o.Component{render(){return o.createElement("div",{className:"code-header"},o.createElement("div",null,o.createElement("h5",null,this.props.children)))}}t.Z=a},44035:function(e,t,n){var o=n(67294),a=n(25026);t.Z=function(e){const t=e.noShadow||!1,n=e.width,r=e.height,i=(0,a.Z)(e.imageSource);return t?o.createElement("div",{className:"figure noshadow"},o.createElement("a",{href:i,target:"_blank"},o.createElement("img",{width:n,height:r,src:i})),o.createElement("p",null,e.children)):o.createElement("div",{className:"figure"},o.createElement("a",{href:i,target:"_blank"},o.createElement("img",{width:n,height:r,src:i})),o.createElement("p",null,e.children))}},29415:function(e,t,n){var o=n(67294),a=n(88678);const r=o.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},o.createElement("path",{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}));class i extends o.Component{render(){return o.createElement(a.Z,{color:"var(--highlight-color-further-reading)",header:"Further reading",type:"further-reading",icon:r},this.props.children)}}t.Z=i},88678:function(e,t,n){var o=n(67294);class a extends o.Component{render(){const e=`highlight highlight-${this.props.type}`;return o.createElement("div",{className:e},o.createElement("div",{className:"highlight-heading"},o.createElement("h5",null,o.createElement("div",{className:"highlight-icon"},this.props.icon),this.props.header)),o.createElement("div",{className:"highlight-content"},this.props.children))}}t.Z=a},93054:function(e,t,n){var o=n(67294),a=n(88678);const r=o.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},o.createElement("path",{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}));class i extends o.Component{render(){return o.createElement(a.Z,{color:"var(--highlight-color-note)",header:"Note",type:"note",icon:r},this.props.children)}}t.Z=i},37793:function(e,t,n){var o=n(67294),a=n(88678);const r=o.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},o.createElement("path",{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}));class i extends o.Component{render(){return o.createElement(a.Z,{color:"var(--highlight-color-tip)",header:"Tip",type:"tip",icon:r},this.props.children)}}t.Z=i},31619:function(e,t,n){n.r(t),n.d(t,{assets:function(){return M},contentTitle:function(){return v},default:function(){return $},frontMatter:function(){return b},metadata:function(){return T},toc:function(){return S}});var o=n(3905),a=n(44035),r=n(29415),i=n(93054),s=n(37793),l=n(22425),c=n(39130),p=n(70814),d=Object.defineProperty,u=Object.defineProperties,m=Object.getOwnPropertyDescriptors,h=Object.getOwnPropertySymbols,g=Object.prototype.hasOwnProperty,_=Object.prototype.propertyIsEnumerable,f=(e,t,n)=>t in e?d(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,k=(e,t)=>{for(var n in t||(t={}))g.call(t,n)&&f(e,n,t[n]);if(h)for(var n of h(t))_.call(t,n)&&f(e,n,t[n]);return e};const b={id:"scenarios-video-decoding",title:"\ube44\ub514\uc624 \ub514\ucf54\ub529"},v=void 0,T={unversionedId:"development/touchgfx-hal-development/scenarios/scenarios-video-decoding",id:"development/touchgfx-hal-development/scenarios/scenarios-video-decoding",title:"\ube44\ub514\uc624 \ub514\ucf54\ub529",description:"",source:"@site/i18n/ko/docusaurus-plugin-content-docs/current/development/touchgfx-hal-development/scenarios/scenarios-video-decoding.mdx",sourceDirName:"development/touchgfx-hal-development/scenarios",slug:"/development/touchgfx-hal-development/scenarios/scenarios-video-decoding",permalink:"/4.21/ko/docs/development/touchgfx-hal-development/scenarios/scenarios-video-decoding",draft:!1,tags:[],version:"current",frontMatter:{id:"scenarios-video-decoding",title:"\ube44\ub514\uc624 \ub514\ucf54\ub529"},sidebar:"docs",previous:{title:"Real Time Operating System",permalink:"/4.21/ko/docs/development/touchgfx-hal-development/scenarios/scenarios-configure-rtos"},next:{title:"MIPI-DSI Video Mode",permalink:"/4.21/ko/docs/development/touchgfx-hal-development/scenarios/scenarios-dsi-video-mode"}},M={},S=[{value:"RTOS \uc9c0\uc6d0",id:"video-rtos-support",level:2},{value:"\uc18c\ud504\ud2b8\uc6e8\uc5b4 \ub514\ucf54\ub529",id:"software-decoding",level:2},{value:"\ube44\ub514\uc624 \ub370\uc774\ud130",id:"video-data",level:3},{value:"\ud558\ub4dc\uc6e8\uc5b4 \ub514\ucf54\ub529",id:"hardware-decoding",level:2},{value:"STM32F769-DISCO",id:"stm32f769-disco",level:3},{value:"STM32H750-DK",id:"stm32h750-dk",level:3},{value:"<code>FileReader</code> \uc778\ud130\ud398\uc774\uc2a4",id:"filereader-interface",level:2},{value:"TBS \ub9c8\uc774\uadf8\ub808\uc774\uc158\uc744 \ud1b5\ud55c \ube44\ub514\uc624 \ub514\ucf54\ub529 \uc9c0\uc6d0",id:"migrating-tbs-to-support-video-decoding",level:2},{value:"General changes",id:"general-changes",level:3},{value:"\uc18c\ud504\ud2b8\uc6e8\uc5b4 \ubcc0\uacbd \uc0ac\ud56d",id:"software-changes",level:3},{value:"\ud558\ub4dc\uc6e8\uc5b4 \ubcc0\uacbd \uc0ac\ud56d",id:"hardware-changes",level:3},{value:"\ube44\ub514\uc624 \ubc84\ud37c\ub97c \uc678\ubd80 \uba54\ubaa8\ub9ac\uc5d0 \uc800\uc7a5\ud558\uae30",id:"placing-video-buffer-in-external-memory",level:2},{value:"EWARM (IAR)",id:"ewarm-iar",level:3},{value:"STM32CubeIDE",id:"stm32cubeide",level:3},{value:"MDK-ARM (Keil)",id:"mdk-arm-keil",level:3}],x={toc:S};function $(e){var t,n=e,{components:d}=n,f=((e,t)=>{var n={};for(var o in e)g.call(e,o)&&t.indexOf(o)<0&&(n[o]=e[o]);if(null!=e&&h)for(var o of h(e))t.indexOf(o)<0&&_.call(e,o)&&(n[o]=e[o]);return n})(n,["components"]);return(0,o.kt)("wrapper",(t=k(k({},x),f),u(t,m({components:d,mdxType:"MDXLayout"}))),(0,o.kt)("p",null,"This section shows how to configure the ",(0,o.kt)("a",k({parentName:"p"},{href:"../generator-how-to/touchgfx-al-configuration/video-decoding"}),"TouchGFX Generator")," to generate a TouchGFX HAL that has video decoding capabilities."),(0,o.kt)("p",null,"\uc774 \uc2dc\ub098\ub9ac\uc624\ub97c \uc77d\uae30 \uc804\uc5d0 \uba3c\uc800 TouchGFX\uc758 ",(0,o.kt)("a",k({parentName:"p"},{href:"../../ui-development/touchgfx-engine-features/video"}),"MJPEG \ube44\ub514\uc624")," \uc0ac\uc6a9\uc5d0 \ub300\ud55c \uc124\uba85\uc11c\uc640 ",(0,o.kt)("a",k({parentName:"p"},{href:"../../ui-development/ui-components/miscellaneous/video"}),"\ube44\ub514\uc624 \uc704\uc82f"),"\uc5d0 \ub300\ud55c \uc124\uba85\uc11c\ub97c \uc77d\uc5b4\ubcf4\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4."),(0,o.kt)("p",null,"\uc544\ub798 \uc2dc\ub098\ub9ac\uc624\ub294 TouchGFX HAL\uc744 \ud65c\uc131\ud654\ud558\uc5ec \uc18c\ud504\ud2b8\uc6e8\uc5b4(LibJPEG)\ub098 \ud558\ub4dc\uc6e8\uc5b4(JPEG)\ub97c \ud1b5\ud574 \ube44\ub514\uc624 \ub514\ucf54\ub529\uc744 \uc9c0\uc6d0\ud558\ub294 \ubc29\ubc95\uc744 \uc790\uc138\ud788 \uc124\uba85\ud55c \uac83\uc785\ub2c8\ub2e4. \ud558\ub4dc\uc6e8\uc5b4(JPEG) \ub514\ucf54\ub529\uc744 \uc9c0\uc6d0\ud558\uae30 \uc704\ud55c STM32CubeMX \uad6c\uc131\uc740 STM32F7\uacfc \ub2e4\uc18c \ub2e4\ub974\uae30 \ub54c\ubb38\uc5d0 \uc5ec\uae30\uc11c\ub294 STM32F7\uacfc STM32H7\uc744 \ubaa8\ub450 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4."),(0,o.kt)("p",null,"Be sure to ",(0,o.kt)("strong",{parentName:"p"},"read all sections")," in this article before configuring the MCU for your specific project."),(0,o.kt)("p",null,"Generally, the LibJPEG and JPEG configurations can be found in STM32CubeMX in the ",(0,o.kt)("em",{parentName:"p"},"Middleware")," and ",(0,o.kt)("em",{parentName:"p"},"Multimedia")," catagories:"),(0,o.kt)(a.Z,{noShadow:!0,imageSource:"/img/development/touchgfx-hal-development/scenarios/cubemx-jpeg-configuration.webp",width:"250",mdxType:"Figure"},"JPEG and LibJPEG setting in STM32CubeMX"),(0,o.kt)(s.Z,{mdxType:"Tip"},(0,o.kt)("li",null,"\ucd5c\uc2e0 \ubc84\uc804\uc758 STM32H750-DK, STM32F769-DISCO \ubc0f STM32F746G-DISCO TouchGFX Board Setup(TBS)\uc740 STM32CubeMX \uad6c\uc131\uc744 \ud1b5\ud574 \uc18c\ud504\ud2b8\uc6e8\uc5b4 \ub514\ucf54\ub529\uacfc JPEG \ud558\ub4dc\uc6e8\uc5b4 \ub514\ucf54\ub529\uc744 \ubaa8\ub450 \uc9c0\uc6d0\ud569\ub2c8\ub2e4."),(0,o.kt)("li",null,"Use the STM32CubeMX configurations found in these example projects as inspiration to get your specific MCU to support MJPEG Video Decoding.")),(0,o.kt)("h2",k({},{id:"video-rtos-support"}),"RTOS \uc9c0\uc6d0"),(0,o.kt)("p",null,"The ",(0,o.kt)("a",k({parentName:"p"},{href:"../generator-how-to/touchgfx-al-configuration/video-decoding"}),"Generator User Guide")," mentions that ",(0,o.kt)("em",{parentName:"p"},"Single-")," and ",(0,o.kt)("em",{parentName:"p"},"Double buffer")," decoding strategies require a CMSIS compliant RTOS, such as FreeRTOS. TouchGFX Generator generates an entry point function ",(0,o.kt)("inlineCode",{parentName:"p"},"videoTaskFunc()"),", that must be associated with a Video decoding task. STM32CubeMX can generate this configuration by defining the task and entry point function in the ",(0,o.kt)("em",{parentName:"p"},"Tasks and queues")," tab of the ",(0,o.kt)("em",{parentName:"p"},"FreeRTOS")," Middleware configuration."),(0,o.kt)("p",null,"The video task stack size (defined in words for CMSIS V2) and RTOS heap size are two important factors."),(0,o.kt)("p",null,"For software decoding the stack size must be carefully set because LibJPEG uses dynamic memory allocation. For hardware decoding the stack size can be substantially lower because there is no software stack which dynamically allocates memory."),(0,o.kt)("p",null,"\ub530\ub77c\uc11c FreeRTOS \ud799\uc740 \uc77c\ubc18 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 + ",(0,o.kt)("inlineCode",{parentName:"p"},"0xA000"),"\uc5d0 \ucda9\ubd84\ud560 \uc815\ub3c4\ub85c \ucee4\uc57c \ud569\ub2c8\ub2e4."),(0,o.kt)(a.Z,{noShadow:!0,imageSource:"/img/development/touchgfx-hal-development/scenarios/freertos-video-task.webp",width:"600",mdxType:"Figure"},"FreeRTOS \ud0dc\uc2a4\ud06c \uad6c\uc131"),(0,o.kt)(a.Z,{noShadow:!0,imageSource:"/img/development/touchgfx-hal-development/scenarios/freertos-video-decoding-heap-size.webp",width:"600",mdxType:"Figure"},"FreeRTOS \ud799 \ud06c\uae30 \uad6c\uc131"),(0,o.kt)("p",null,"Based on the above configuration, STM32CubeMX generates the following code for the video task:"),(0,o.kt)(l.Z,{mdxType:"CodeHeader"},"main.c"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-cpp",metastring:"{2-7,13}","{2-7,13}":!0}),'/* Definitions for VideoTask */\nosThreadId_t VideoTaskHandle;\nconst osThreadAttr_t VideoTask_attributes = {\n  .name = "VideoTask",\n  .stack_size = 1000 * 4,\n  .priority = (osPriority_t) osPriorityLow,\n};\n...\nvoid main()\n{\n    ...\n    /* creation of VideoTask */\n    VideoTaskHandle = osThreadNew(videoTaskFunc, NULL, &VideoTask_attributes);\n    ...\n}\n')),(0,o.kt)(l.Z,{mdxType:"CodeHeader"},"FreeRTOSConfig.h"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-cpp"}),"#define configTOTAL_HEAP_SIZE                    ((size_t)75000)\n")),(0,o.kt)("h2",k({},{id:"software-decoding"}),"\uc18c\ud504\ud2b8\uc6e8\uc5b4 \ub514\ucf54\ub529"),(0,o.kt)("p",null,"The software decoding solution requires that the ",(0,o.kt)("strong",{parentName:"p"},"LibJPEG")," middleware is enabled from STM32CubeMX, as specified in ",(0,o.kt)("a",k({parentName:"p"},{href:"../generator-how-to/touchgfx-al-configuration/video-decoding#video-decoding-type"}),"Generator User Guide"),". \uc18c\ud504\ud2b8\uc6e8\uc5b4 \ub514\ucf54\ub529 \uc124\uc815\uc740 LibJPEG\ub97c \uc9c0\uc6d0\ud558\ub294 MCU(\uc608: STM32F4, STM32F7, STM32H7)\uc5d0\uc11c \ubaa8\ub450 \ub3d9\uc77c\ud569\ub2c8\ub2e4."),(0,o.kt)("p",null,"TouchGFX \uc18c\ud504\ud2b8\uc6e8\uc5b4 \ub514\ucf54\ub354\ub294 LibJPEG\uc5d0\uc11c \ub514\ucf54\ub529\ub418\ub294 \ub370\uc774\ud130\ub97c BGR \ud53d\uc140 \uc21c\uc11c\ub85c \uc124\uc815\ud569\ub2c8\ub2e4. \uc774 \uc124\uc815\uc774 RGB\ub85c \ub0a8\uc544 \uc788\ub2e4\uba74 R \uc0c9\uc0c1 \uc131\ubd84\uacfc B \uc0c9\uc0c1 \uc131\ubd84\uc774 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \uc11c\ub85c \uc790\ub9ac\ub97c \ubc14\uafc9\ub2c8\ub2e4."),(0,o.kt)("p",null,"Furthermore, the size of each pixel should be 3 bytes if using a 16-bit or 24-bit video RGB buffer or 4 if using a 32-bit video RGB buffer."),(0,o.kt)(a.Z,{noShadow:!0,imageSource:"/img/development/touchgfx-hal-development/scenarios/libjpeg-configuration.webp",width:"500",mdxType:"Figure"},"LibJPEG Configuration for a 16-bit or 24-bit video RGB buffer"),(0,o.kt)(p.Z,{mdxType:"Caution"},(0,o.kt)("li",null,"The RGB_ORDERING setting must be configured as BGR, and the pixel size must be set according to which video RGB buffer format is used."),(0,o.kt)("li",null,"If your application uses ",(0,o.kt)("b",null,"Direct to Framebuffer")," strategy in a ",(0,o.kt)("b",null,"ARGB8888")," (32-bit) application the ",(0,o.kt)("b",null,"pixel size")," must be set to 4")),(0,o.kt)("h3",k({},{id:"video-data"}),"\ube44\ub514\uc624 \ub370\uc774\ud130"),(0,o.kt)(p.Z,{mdxType:"Caution"},"\ud604\uc7ac STM32CubeMX\uc640 TouchGFX Generator, \uadf8\ub9ac\uace0 TouchGFX Designer\uc758 \ube44\ub514\uc624 \uc704\uc82f\uc744 \uc0ac\uc6a9\ud558\ub294 \ub514\ucf54\ub529 \uc194\ub8e8\uc158\uc740 ST \ubcf4\ub4dc\uc5d0\uc11c\ub9cc \uc720\ud6a8\ud55c\ub370, \uadf8 \uc774\uc720\ub294 \ube44\ub514\uc624 \ub370\uc774\ud130\uac00 \uba54\ubaa8\ub9ac \ub9e4\ud551 \ud50c\ub798\uc2dc\uc5d0\uc11c \uc774\ubbf8 \uc54c\ub824\uc9c4 \ud2b9\uc815 \uc8fc\uc18c\ub85c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \uc5f0\uacb0\ub418\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4."),(0,o.kt)("p",null,"\uc544\ub798 EWARM \ud504\ub85c\uc81d\ud2b8\uc758 \uc2a4\ub2c8\ud3ab\uc740 TouchGFX Designer\uc5d0\uc11c \uc0dd\uc131\ub418\ub294 \ucd94\uac00 \uc635\uc158\uc744 \ube44\ub86f\ud574 \ubaa8\ub4e0 TouchGFX \ubcf4\ub4dc \ud328\ud0a4\uc9c0\uc758 \ub9c1\ucee4 \uc2a4\ud06c\ub9bd\ud2b8\uc5d0\uc11c \uc815\uc758\ud558\ub294 ",(0,o.kt)("inlineCode",{parentName:"p"},"ExtFlashSection"),"\uc5d0 \ub370\uc774\ud130\ub97c \ucd94\uac00\ud558\ub294 \ubc29\ubc95\uc744 \ub098\ud0c0\ub0b8 \uac83\uc785\ub2c8\ub2e4. \uba54\ubaa8\ub9ac \ub9e4\ud551\uc774 \ub418\uc9c0 \uc54a\ub294 \ud50c\ub798\uc2dc \ub610\ub294 \uc774 \uc139\uc158\uc744 \uc815\uc758\ud558\uc9c0 \uc54a\ub294 \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c\ub294 \uc544\ub798 \uc2a4\ub2c8\ud3ab\uc774 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."),(0,o.kt)(l.Z,{mdxType:"CodeHeader"},"ewarm_project.ewp"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{}),"        <option>\n          <name>IlinkExtraOptions</name>\n          <state>--image_input $PROJ_DIR$\\..\\TouchGFX\\generated\\videos\\bin\\washerdryer.bin,video_washerdryer_bin_start,ExtFlashSection,4</state>\n          <state>--keep video_washerdryer_bin_start</state>\n        </option>\n")),(0,o.kt)("p",null,"\uba54\ubaa8\ub9ac \ub9e4\ud551\uc774 \ub418\uc9c0 \uc54a\ub294 \uba54\ubaa8\ub9ac\uc5d0 \ube44\ub514\uc624 \ub370\uc774\ud130\ub97c \ucd94\uac00\ud558\ub294 \ud504\ub85c\uc81d\ud2b8\uc758 \uacbd\uc6b0\uc5d0\ub294 \uc774 \uc124\uba85\uc11c\uc758 ",(0,o.kt)("inlineCode",{parentName:"p"},"FileReader")," \uc139\uc158\uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624."),(0,o.kt)("h2",k({},{id:"hardware-decoding"}),"\ud558\ub4dc\uc6e8\uc5b4 \ub514\ucf54\ub529"),(0,o.kt)("p",null,"The ",(0,o.kt)("a",k({parentName:"p"},{href:"../generator-how-to/touchgfx-al-configuration/video-decoding"}),"Generator User Guide")," mentions that the ",(0,o.kt)("strong",{parentName:"p"},"JPEG IP")," must be enabled in STM32CubeMX to enable Hardware decoding."),(0,o.kt)("h3",k({},{id:"stm32f769-disco"}),"STM32F769-DISCO"),(0,o.kt)("p",null,"JPEG\ub97c \uc9c0\uc6d0\ud558\ub294 STM32F7 \uc2dc\ub9ac\uc988(\uc608: STM32F769)\uc5d0\uc11c\ub294 JPEG \uad6c\uc131\uc774 STM32H7 \ub77c\uc778\uacfc \ub2e4\uc18c \ub2e4\ub985\ub2c8\ub2e4. The ",(0,o.kt)("inlineCode",{parentName:"p"},"RGB_FORMAT")," setting found in the ",(0,o.kt)("em",{parentName:"p"},"JPEG")," configurations must respect the pixel format of the TouchGFX Framebuffer, ",(0,o.kt)("inlineCode",{parentName:"p"},"JPEG_RGB565")," in the example below."),(0,o.kt)(a.Z,{noShadow:!0,imageSource:"/img/development/touchgfx-hal-development/scenarios/jpeg-hw-configuration.webp",width:"450",mdxType:"Figure"},"JPEG \ub9e4\uac1c\ubcc0\uc218 \uc124\uc815"),(0,o.kt)("p",null,"Use DMA to transfer data to (memory-to-peripheral) and from (peripheral-to-memory) the JPEG peripheral through the ",(0,o.kt)("em",{parentName:"p"},"DMA Settings")," tab found in ",(0,o.kt)("em",{parentName:"p"},"JPEG")," configurations. DMA \uc694\uccad\uc744 ",(0,o.kt)("inlineCode",{parentName:"p"},"IN"),"\uc73c\ub85c ",(0,o.kt)("em",{parentName:"p"},"\ucd94\uac00\ud558\uba74")," ",(0,o.kt)("inlineCode",{parentName:"p"},"OUT")," \uc694\uccad\uc774 \ubc29\ud5a5 \ub9e4\uac1c\ubcc0\uc218\ub97c \uc790\ub3d9\uc73c\ub85c \uc124\uc815\ud569\ub2c8\ub2e4."),(0,o.kt)(a.Z,{noShadow:!0,imageSource:"/img/development/touchgfx-hal-development/scenarios/jpeg-hw-dma-configuration.webp",width:"450",mdxType:"Figure"},"JPEG DMA \uc124\uc815"),(0,o.kt)("p",null,"\uc774\uac83\uc73c\ub85c JPEG\uc744 \uc9c0\uc6d0\ud558\ub294 STM32F7(\uc608: STM32F769)\uc5d0\uc11c \ud558\ub4dc\uc6e8\uc5b4 \ub514\ucf54\ub529\uc744 \uc704\ud55c TouchGFX HAL \uad6c\uc131\uc774 \ub05d\ub0ac\uc2b5\ub2c8\ub2e4. STM32CubeMX\uc5d0\uc11c \ucf54\ub4dc \uc0dd\uc131\uc744 \ub9c8\uce58\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 Designer\uc5d0\uc11c \ube44\ub514\uc624 \uc704\uc82f\uc744 \uc0ac\uc6a9\ud560 \ub54c JPEG \uc8fc\ubcc0 \uc7a5\uce58\ub85c \ube44\ub514\uc624\ub97c \ub514\ucf54\ub529\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,o.kt)(p.Z,{mdxType:"Caution"},"JPEG \uc8fc\ubcc0 \uc7a5\uce58 \uad6c\uc131\uc5d0\uc11c RGB_FORMAT\uc740 TouchGFX \ud504\ub808\uc784 \ubc84\ud37c\uc758 \ud615\uc2dd\uc744 \ub530\ub77c\uc57c \ud569\ub2c8\ub2e4."),(0,o.kt)("h3",k({},{id:"stm32h750-dk"}),"STM32H750-DK"),(0,o.kt)("p",null,"\uc608\ub97c \ub4e4\uc5b4 STM32H750\uc77c \ub54c \ud558\ub4dc\uc6e8\uc5b4 \ub514\ucf54\ub529(JPEG \uc9c0\uc6d0)\uc774 STM32F769\uacfc \uc720\uc77c\ud558\uac8c \ub2e4\ub978 \uc810\uc740 STM32CubeMX\uc5d0\uc11c DMA \uc804\uc1a1\uc744 \uad6c\uc131\ud558\ub294 \ubc29\uc2dd\uc785\ub2c8\ub2e4. UI\ub294 \ubb3c\ub860\uc774\uace0 DMA \uac1c\ub150\ub3c4 \ub2e4\ub985\ub2c8\ub2e4."),(0,o.kt)("p",null,"STM32H750\uc758 \uacbd\uc6b0\uc5d0\ub294 JPEG \uc8fc\ubcc0 \uc7a5\uce58\ub97c \uc77c\ubc18 DMA \uc8fc\ubcc0 \uc7a5\uce58\uac00 \uc544\ub2cc MDMA \uc8fc\ubcc0 \uc7a5\uce58\ub9cc \uc0ac\uc6a9\ud558\ub3c4\ub85d \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798 \uc774\ubbf8\uc9c0\uc640 \uac19\uc774 input/output FIFO threshold \uc2e0\ud638\uc5d0 MDMA \uad6c\uc131\uc744 \ucd94\uac00\ud558\uc2ed\uc2dc\uc624."),(0,o.kt)(i.Z,{mdxType:"Note"},"MDMA\ub294 DMA1/DMA2\uc5d0 \ube44\ud574 \uc131\ub2a5\uc774 \ud6e8\uc52c \ub6f0\uc5b4\ub09c DMA \uc5d4\uc9c4\uc785\ub2c8\ub2e4."),(0,o.kt)(a.Z,{noShadow:!0,imageSource:"/img/development/touchgfx-hal-development/scenarios/mdma-input-fifo-threshold.webp",mdxType:"Figure"},"JPEG DMA \uc124\uc815"),(0,o.kt)(a.Z,{noShadow:!0,imageSource:"/img/development/touchgfx-hal-development/scenarios/mdma-output-fifo-threshold.webp",mdxType:"Figure"},"JPEG DMA \uc124\uc815"),(0,o.kt)("h2",k({},{id:"filereader-interface"}),(0,o.kt)("inlineCode",{parentName:"h2"},"FileReader")," \uc778\ud130\ud398\uc774\uc2a4"),(0,o.kt)("p",null,"\uac1c\ubc1c\uc790\uac00 MJPEG \ube44\ub514\uc624\ub97c \uba54\ubaa8\ub9ac \ub9e4\ud551\uc774 \ub418\uc9c0 \uc54a\ub294 \uba54\ubaa8\ub9ac\uc5d0 \uc800\uc7a5\ud558\ub294 \uacbd\uc6b0\uc5d0\ub294 TouchGFX \ube44\ub514\uc624 \ucee8\ud2b8\ub864\ub7ec\uac00 \ub514\ucf54\ub529\ud560 \ub370\uc774\ud130\ub97c \uad6c\uc131\ub41c \ub514\ucf54\ub354(\uc18c\ud504\ud2b8\uc6e8\uc5b4/\ud558\ub4dc\uc6e8\uc5b4)\ub85c \uc804\ub2ec\ud560 \ub54c \uc0ac\uc6a9\ud560 ",(0,o.kt)("inlineCode",{parentName:"p"},"touchgfx::VideoDataReader")," \uad6c\ud604\uccb4\ub97c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798\ub294 \ube44\ub514\uc624 \ub370\uc774\ud130\ub97c \ubc84\ud37c\uc5d0\uc11c \ub2e4\ub978 \ubc84\ud37c\ub85c \ubcf5\uc0ac\ud558\ub294 \uc778\ud130\ud398\uc774\uc2a4\uc758 \uc608\uc2dc\uc785\ub2c8\ub2e4."),(0,o.kt)(l.Z,{mdxType:"CodeHeader"},"VideoView.cpp"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-cpp"}),"class MyReader : public touchgfx::VideoDataReader\n{\npublic:\n    MyReader() : position(0) { }\n    virtual uint32_t getDataLength() { return video_len; }\n    virtual void seek(uint32_t pos) { position = pos; }\n    virtual bool readData(void* dst, uint32_t bytes)\n    {\n        memcpy(dst, &video_data[position], bytes);\n        position += bytes;\n        return true;\n    }\n    private:\n        uint32_t position;\n} myReader;\n")),(0,o.kt)("p",null,"\uac1c\ubc1c\uc790\ub294 ",(0,o.kt)("inlineCode",{parentName:"p"},"Video")," \uc704\uc82f\uc5d0\uac8c \ub9e4\ud551 \uba54\ubaa8\ub9ac\uc5d0\uc11c \ube44\ub514\uc624 \uc2dc\uc791 \ubc29\ud5a5\uc73c\ub85c \ud5a5\ud558\ub294 \ub300\uc2e0, \ub370\uc774\ud130 \ub9ac\ub354\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,o.kt)(l.Z,{mdxType:"CodeHeader"},"VideoView.cpp"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-cpp"}),"video.setVideoData(myReader);\n")),(0,o.kt)("h2",k({},{id:"migrating-tbs-to-support-video-decoding"}),"TBS \ub9c8\uc774\uadf8\ub808\uc774\uc158\uc744 \ud1b5\ud55c \ube44\ub514\uc624 \ub514\ucf54\ub529 \uc9c0\uc6d0"),(0,o.kt)("p",null,"If you want to migrate a project created from a TouchGFX Board Setups (TBS) - with a MCU that supports video decoding - from a version of TouchGFX Designer before video decoding was supported and you want to be able to use 'Run Target' in TouchGFX Designer with that project, some manual changes to the GCC Makefile are required."),(0,o.kt)("p",null,"\ud544\uc694\ud55c \ubcc0\uacbd \uc0ac\ud56d\uacfc \uadf8 \uc774\uc720\uc5d0 \ub300\ud574\uc11c\ub294 \ub2e4\uc74c \uc139\uc158\uc5d0\uc11c \uc124\uba85\ud558\uaca0\uc2b5\ub2c8\ub2e4. There are some general changes that must always be applied and some LibJPEG (software decoding) and JPEG (hardware decoding) specific changes depending on what the developers application uses. \uc774\uc804 TBS\uc5d0\uc11c \uc774\ubbf8 \uc874\uc7ac\ud558\ub294 GCC Makefile\ub85c \ud655\uc7a5\ud558\ub294 \ubcc0\uacbd\uc774 \ud544\uc694\ud569\ub2c8\ub2e4."),(0,o.kt)("p",null,"Makefile\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\ub294 \uac83 \uc678\uc5d0\ub3c4 \uc704\uc758 \uc2dc\ub098\ub9ac\uc624\uc5d0\uc11c \uc124\uba85\ud55c \uac83\ucc98\ub7fc STM32CubeMX\uc5d0\uc11c \ube44\ub514\uc624 \ub514\ucf54\ub529\uc744 \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4."),(0,o.kt)("h3",k({},{id:"general-changes"}),"General changes"),(0,o.kt)("p",null,"\ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c LIBJPEG \uacbd\ub85c\ub97c \uc815\uc758\ud569\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-make",metastring:"{2}","{2}":!0}),"# LibJPEG path\nlibjpeg_path := $(cubemx_middlewares_path)/Third_Party/LibJPEG\n")),(0,o.kt)("p",null,"\uadf8\ub7f0 \ub2e4\uc74c \ube44\ub514\uc624 \uc560\uc14b \uc785\ub825 \uacbd\ub85c\ub97c \uc815\uc758\ud574\uc57c \ud569\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-make",metastring:"{3}","{3}":!0}),"asset_texts_input  := TouchGFX/assets/texts\n\nasset_videos_input := TouchGFX/assets/videos\n")),(0,o.kt)("p",null,"The video assets output path must also be defined bellow the already existing assets output paths:"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-make",metastring:"{4}","{4}":!0}),"asset_images_output := $(asset_root_path)/images\nasset_fonts_output := $(asset_root_path)/fonts\nasset_texts_output := $(asset_root_path)/texts\nasset_videos_output := $(asset_root_path)/videos\n")),(0,o.kt)("p",null,"\ube44\ub514\uc624 \ucd9c\ub825 \uc560\uc14b\uc744 \uad6c\uc131\uc694\uc18c \ubaa9\ub85d\uc5d0 \ucd94\uac00\ud569\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-make",metastring:"{6}","{6}":!0}),"all_components := $(components) \\\n    $(asset_fonts_output) \\\n    $(asset_images_output) \\\n    $(asset_texts_output)\n    $(asset_texts_output) \\\n    $(asset_videos_output)\n")),(0,o.kt)("p",null,"\ube44\ub514\uc624 \uac1d\uccb4 \ud30c\uc77c\uc744 \uc815\uc758\ud574\uc57c \ud569\ub2c8\ub2e4. The video object files are separated from the already existing object:"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-make",metastring:"{4}","{4}":!0}),"c_source_files := $(call find, $(source_paths),*.c) $(os_source_files) $(board_c_files)\nsource_files += $(board_cpp_files)\n\nvideo_object_files := $(call find, $(asset_videos_output),*.o)\n")),(0,o.kt)("p",null,"\ube44\ub514\uc624 \ubcc0\ud658 \ub3c4\uad6c \uc2a4\ud06c\ub9bd\ud2b8\uc5d0 \ub300\ud55c \uacbd\ub85c\ub97c \uc815\uc758\ud574\uc57c \ud569\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-make",metastring:"{3}","{3}":!0}),"textconvert_script_path := $(touchgfx_path)/framework/tools/textconvert\ntextconvert_executable := $(call find, $(textconvert_script_path), *.rb)\nvideoconvert_script_path := $(touchgfx_path)/framework/tools/videoconvert\n")),(0,o.kt)("p",null,"An optional ",(0,o.kt)("inlineCode",{parentName:"p"},"echo")," can be added to see all video objects files. \uc774\ub54c \ube44\ub514\uc624 \uac1d\uccb4 \ud30c\uc77c\uc744 \uc5f0\uacb0 \ub2e8\uacc4\uc5d0 \ucd94\uac00\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774 \ud589\uc5d0\ub294 \ub098\uba38\uc9c0 \uac1d\uccb4 \ud30c\uc77c\uacfc \ud568\uaed8 $(video_object_files)\uac00 \ucd94\uac00\ub429\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-make",metastring:"{2,6}","{2,6}":!0}),"$(binary_output_path)/$(target_executable): $(object_files) $(object_asm_files)\n    @echo Video Objects: $(video_object_files)\n    @echo Linking $(@)\n    @mkdir -p $(@D)\n    @mkdir -p $(object_output_path)\n    @$(file >$(build_root_path)/objects.tmp) $(foreach F,$(object_files) $(video_object_files),$(file >>$(build_root_path)/objects.tmp,$F))\n")),(0,o.kt)("p",null,"\ube44\ub514\uc624 \uaddc\uce59\uc744 \uae30\uc874 ",(0,o.kt)("em",{parentName:"p"},"\uc560\uc14b"),"\uacfc .PHONY\uc5d0 \ucd94\uac00\ud569\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-make",metastring:"{1,3}","{1,3}":!0}),"_assets_: BitmapDatabase TextKeysAndLanguages Videos\n\n.PHONY: BitmapDatabase TextKeysAndLanguages Videos\n")),(0,o.kt)("p",null,"\ube44\ub514\uc624 \uaddc\uce59\uc774 \ube44\ub514\uc624 \ubcc0\ud658 \ucd94\uac00\uc640 \ud568\uaed8 \ucd94\uac00\ub429\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-make"}),"Videos:\n    @ruby $(videoconvert_script_path)/videoconvert.rb $(asset_videos_input) $(asset_videos_output)\n")),(0,o.kt)("p",null,"\ub9c8\uc9c0\ub9c9\uc73c\ub85c \ube44\ub514\uc624 \uad00\ub828 \ucd9c\ub825\ub3c4 \uc0ad\uc81c\ud560 \uc218 \uc788\ub3c4\ub85d \uc0ad\uc81c \uaddc\uce59\uc744 \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-make",metastring:"{8}","{8}":!0}),"_clean_:\n    @echo Cleaning: $(board_name)\n    @rm -rf $(build_root_path)\n    # Do not remove gui_generated\n    @rm -rf $(asset_images_output)\n    @rm -rf $(asset_fonts_output)\n    @rm -rf $(asset_texts_output)\n    @rm -rf $(asset_videos_output)\n    # Create directory to avoid error if it does not exist\n    @mkdir -p $(asset_root_path)\n    # Remove assets folder if it is empty (i.e. no gui_generated folder)\n    @rmdir --ignore-fail-on-non-empty $(asset_root_path)\n    # Clean bootloader project\n    @$(MAKE) -r -f ExtMem_Boot/gcc/Makefile -s $(MFLAGS) clean\n")),(0,o.kt)("h3",k({},{id:"software-changes"}),"\uc18c\ud504\ud2b8\uc6e8\uc5b4 \ubcc0\uacbd \uc0ac\ud56d"),(0,o.kt)("p",null,"\ubaa8\ub4e0 LIBJPEG \uacbd\ub85c\ub97c include \uacbd\ub85c\uc5d0 \ucd94\uac00\ud569\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-make",metastring:"{9-11}","{9-11}":!0}),"include_paths := $(library_includes) \\\n    $(foreach comp, $(all_components), $(comp)/include) \\\n    $(foreach comp, $(cubemx_components), $(comp)/Inc) \\\n    $(foreach comp, $(touchgfx_generator_components), $(comp)/generated) \\\n    $(framework_includes) \\\n    $(cubemx_middlewares_path) \\\n    $(touchgfx_middlewares_path) \\\n    $(touchgfx_generator_components) \\\n    LIBJPEG/Target \\\n    $(libjpeg_path)/include \\\n    LIBJPEG/App\n")),(0,o.kt)("p",null,"LIBJPEG \uc18c\uc2a4 \uacbd\ub85c\ub97c \uc815\uc758\ud574\uc57c \ud569\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-make",metastring:"{4-5}","{4-5}":!0}),"c_source_files := $(call find, $(source_paths),*.c) $(os_source_files) $(board_c_files)\nsource_files += $(board_cpp_files)\n\nlibjpeg_source_path = Middlewares/Third_Party/LibJPEG/source\n")),(0,o.kt)("p",null,"\uadf8\ub7f0 \ub2e4\uc74c \ubaa8\ub4e0 LIBJPEG \uc18c\uc2a4 \ud30c\uc77c\uc744 board_c_files\uc5d0 \ucd94\uac00\ud574\uc57c \ud569\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-make",metastring:"{10-37}","{10-37}":!0}),"board_c_files := \\\n    $(Drivers_path)/BSP/STM32H750B-DK/stm32h750b_discovery_bus.c \\\n    $(Drivers_path)/BSP/STM32H750B-DK/stm32h750b_discovery_qspi.c \\\n    $(Drivers_path)/BSP/STM32H750B-DK/stm32h750b_discovery_sdram.c \\\n    $(Drivers_path)/BSP/STM32H750B-DK/stm32h750b_discovery_ts.c \\\n    $(Drivers_path)/BSP/Components/ft5336/ft5336.c \\\n    $(Drivers_path)/BSP/Components/ft5336/ft5336_reg.c \\\n    $(Drivers_path)/BSP/Components/mt25tl01g/mt25tl01g.c \\\n    $(Drivers_path)/BSP/Components/mt48lc4m32b2/mt48lc4m32b2.c \\\n    $(libjpeg_source_path)/jaricom.c \\\n    $(libjpeg_source_path)/jcomapi.c \\\n    $(libjpeg_source_path)/jdapimin.c \\\n    $(libjpeg_source_path)/jdapistd.c \\\n    $(libjpeg_source_path)/jdarith.c \\\n    $(libjpeg_source_path)/jdatasrc.c \\\n    $(libjpeg_source_path)/jdcoefct.c \\\n    $(libjpeg_source_path)/jdcolor.c \\\n    $(libjpeg_source_path)/jddctmgr.c \\\n    $(libjpeg_source_path)/jdhuff.c \\\n    $(libjpeg_source_path)/jdinput.c \\\n    $(libjpeg_source_path)/jdmainct.c \\\n    $(libjpeg_source_path)/jdmarker.c \\\n    $(libjpeg_source_path)/jdmaster.c \\\n    $(libjpeg_source_path)/jdmerge.c \\\n    $(libjpeg_source_path)/jdpostct.c \\\n    $(libjpeg_source_path)/jdsample.c \\\n    $(libjpeg_source_path)/jdtrans.c \\\n    $(libjpeg_source_path)/jerror.c \\\n    $(libjpeg_source_path)/jidctflt.c \\\n    $(libjpeg_source_path)/jidctfst.c \\\n    $(libjpeg_source_path)/jidctint.c \\\n    $(libjpeg_source_path)/jmemmgr.c \\\n    $(libjpeg_source_path)/jmemnobs.c \\\n    $(libjpeg_source_path)/jquant1.c \\\n    $(libjpeg_source_path)/jquant2.c \\\n    $(libjpeg_source_path)/jutils.c \\\n    LIBJPEG/App/libjpeg.c\n")),(0,o.kt)("p",null,"\uadf8\ub7ec\uba74 LIBJPEG \uc18c\uc2a4 \ud30c\uc77c\uc774 \ub098\uba38\uc9c0 \ubbf8\ub4e4\uc6e8\uc5b4 \uc18c\uc2a4 \ud30c\uc77c\uacfc \ub3d9\uc77c\ud55c \ubc29\uc2dd\uc73c\ub85c \uae30\uc874 \uac1d\uccb4 \ud30c\uc77c\uc5d0 \ucd94\uac00\ub429\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-make",metastring:"{6}","{6}":!0}),"# Start converting paths\nobject_files := $(object_files:$(touchgfx_path)/%.cpp=$(object_output_path)/touchgfx/%.o)\nobject_files := $(object_files:%.cpp=$(object_output_path)/%.o)\nobject_files := $(object_files:$(touchgfx_middlewares_path)/%.c=$(object_output_path)/$(touchgfx_middlewares_path)/%.o)\nobject_files := $(object_files:$(cubemx_middlewares_path)/%.c=$(object_output_path)/$(cubemx_middlewares_path)/%.o)\nobject_files := $(object_files:$(libjpeg_source_path)/%.c=$(object_output_path)/$(libjpeg_source_path)/%.o)\nobject_files := $(object_files:$(Drivers_path)/%.c=$(object_output_path)/Drivers/%.o)\nobject_files := $(object_files:%.c=$(object_output_path)/%.o)\n")),(0,o.kt)("h3",k({},{id:"hardware-changes"}),"\ud558\ub4dc\uc6e8\uc5b4 \ubcc0\uacbd \uc0ac\ud56d"),(0,o.kt)("p",null,"\ubaa8\ub4e0 JPEG \uacbd\ub85c\ub97c include \uacbd\ub85c\uc5d0 \ucd94\uac00\ud569\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-make",metastring:"{9}","{9}":!0}),"include_paths := $(library_includes) \\\n    $(foreach comp, $(all_components), $(comp)/include) \\\n    $(foreach comp, $(cubemx_components), $(comp)/Inc) \\\n    $(foreach comp, $(touchgfx_generator_components), $(comp)/generated) \\\n    $(framework_includes) \\\n    $(cubemx_middlewares_path) \\\n    $(touchgfx_middlewares_path) \\\n    $(touchgfx_generator_components) \\\n    Utilities/JPEG\n")),(0,o.kt)("p",null,"\uadf8\ub7f0 \ub2e4\uc74c \ubaa8\ub4e0 JPEG \uc18c\uc2a4 \ud30c\uc77c\uc744 board_c_files\uc5d0 \ucd94\uac00\ud574\uc57c \ud569\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-make",metastring:"{10}","{10}":!0}),"board_c_files := \\\n    $(Drivers_path)/BSP/STM32H750B-DK/stm32h750b_discovery_bus.c \\\n    $(Drivers_path)/BSP/STM32H750B-DK/stm32h750b_discovery_qspi.c \\\n    $(Drivers_path)/BSP/STM32H750B-DK/stm32h750b_discovery_sdram.c \\\n    $(Drivers_path)/BSP/STM32H750B-DK/stm32h750b_discovery_ts.c \\\n    $(Drivers_path)/BSP/Components/ft5336/ft5336.c \\\n    $(Drivers_path)/BSP/Components/ft5336/ft5336_reg.c \\\n    $(Drivers_path)/BSP/Components/mt25tl01g/mt25tl01g.c \\\n    $(Drivers_path)/BSP/Components/mt48lc4m32b2/mt48lc4m32b2.c \\\n    Utilities/JPEG/jpeg_utils.c\n")),(0,o.kt)("h2",k({},{id:"placing-video-buffer-in-external-memory"}),"\ube44\ub514\uc624 \ubc84\ud37c\ub97c \uc678\ubd80 \uba54\ubaa8\ub9ac\uc5d0 \uc800\uc7a5\ud558\uae30"),(0,o.kt)("p",null,"When developers create new projects with STM32CubeMX, the linker scripts associated with the generated projects do not contain any of the possible regions used by TouchGFX. \uc774\ub85c \uc778\ud574 MJPEG \ube44\ub514\uc624\ub97c \ub514\ucf54\ub529\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \ubc84\ud37c\ub294 \uac1c\ubc1c\uc790\uac00 \ub9c1\ucee4 \uc2a4\ud06c\ub9bd\ud2b8\ub97c \uc218\uc815\ud558\uc5ec \ub2e4\ub978 \uacf3\uc5d0 \uc800\uc7a5\ud560 \ub54c\uae4c\uc9c0 \ub9c1\ucee4\ub97c \ud1b5\ud574 \ub0b4\ubd80 \ud50c\ub798\uc2dc\uc5d0 \uc800\uc7a5\ub429\ub2c8\ub2e4. \uac1c\ubc1c\uc790\uac00 \uc774\ub807\uac8c \uc218\uc815\ud558\uc9c0 \uc54a\uc73c\uba74 \ub0b4\ubd80 \uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub7c9\uc774 \ud06c\uac8c \uc99d\uac00\ud558\uc5ec \uc804\uccb4 \ud654\uba74 \ube44\ub514\uc624 \ub514\ucf54\ub529\uacfc \uac19\uc740 \ub300\uc6a9\ub7c9\uc758 \ube44\ub514\uc624 \ubc84\ud37c\ub97c \uc800\uc7a5\ud558\uc9c0 \ubabb\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4."),(0,o.kt)(s.Z,{mdxType:"Tip"},"\ub2e4\uc74c\uc740 \uc0ac\uc804 \uad6c\uc131\ub418\uc5b4 \uc678\ubd80 \uba54\ubaa8\ub9ac\uc5d0 \uc788\ub294 \ube44\ub514\uc624\ub97c \uc5b8\uc81c\ub4e0\uc9c0 \ub514\ucf54\ub529\ud560 \uc218 \uc788\ub294 TBS\uc785\ub2c8\ub2e4.",(0,o.kt)("ol",null,(0,o.kt)("li",null,"STM32F746-DISCO"),(0,o.kt)("li",null,"STM32F769-DISCO"),(0,o.kt)("li",null,"STM32H750-DK"))),(0,o.kt)("p",null,"\ube44\ub514\uc624 \ub514\ucf54\ub529\uc744 \ud65c\uc131\ud654\ud558\uba74 JPEG \ub514\ucf54\ub529 \uc804\uc6a9 RGB \ubc84\ud37c\uc5d0 \ub300\ud55c \uc815\uc758\uac00 TouchGFX Generator\uc5d0\uc11c \uc0dd\uc131\ub429\ub2c8\ub2e4. \uc815\uc758\ub294 \ub9c1\ucee4\uc5d0\uac8c \ubc84\ud37c\ub97c \uc800\uc7a5\ud560 \uc139\uc158\uc744 \uc54c\ub824\uc8fc\ub294 location pragma\ub85c \uacc4\uce21\ub429\ub2c8\ub2e4. \ub9c1\ucee4\uac00 \ub9c1\ucee4 \uc2a4\ud06c\ub9bd\ud2b8\uc5d0\uc11c \uc774 \uba54\ubaa8\ub9ac \uc601\uc5ed\uc744 \ucc3e\uc9c0 \ubabb\ud558\uba74 \ubc84\ud37c\uac00 \ub0b4\ubd80 \uba54\ubaa8\ub9ac\uc5d0 \uc800\uc7a5\ub429\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{className:"language-cpp"}),'LOCATION_PRAGMA_NOLOAD("Video_RGB_Buffer")\nuint32_t videoRGBBuffer[57600] LOCATION_ATTRIBUTE_NOLOAD("Video_RGB_Buffer");\n')),(0,o.kt)("p",null,"\ub2e4\uc74c \ucef4\ud30c\uc77c\ub7ec\ubcc4 \ud558\uc704 \uc139\uc158\uc740 \uac1c\ubc1c\uc790\uac00 \ubc84\ud37c\ub97c SDRAM\uc5d0 \uc800\uc7a5\ud558\ub824\uace0 \ud560 \ub54c \uc218\uc815\ud560 \uc218 \uc788\ub294 \ub0b4\uc6a9\uc744 \uc124\uba85\ud55c \uac83\uc785\ub2c8\ub2e4. ",(0,o.kt)("inlineCode",{parentName:"p"},"Video_RGB_Buffer"),"\ub294 \ube44\ub514\uc624 \ub514\ucf54\ub529\uc5d0 \uc0ac\uc6a9\ub418\ub294 \ubc84\ud37c\ub97c \ub9d0\ud569\ub2c8\ub2e4. \ub9c1\ucee4 \uc2a4\ud06c\ub9bd\ud2b8 \uc608\uc81c\uc5d0\uc11c\ub294 TouchGFX \ud504\ub808\uc784 \ubc84\ud37c\ub97c \uc704\ud574 SDRAM\uc5d0 \uc77c\ubd80 \uacf5\uac04(",(0,o.kt)("inlineCode",{parentName:"p"},"0xC0000000"),"\uc5d0\uc11c \uc2dc\uc791)\uc744 \ub0a8\uaca8\ub450\uc5c8\uc2b5\ub2c8\ub2e4."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"EWARM"),(0,o.kt)("li",{parentName:"ol"},"STM32CubeIDE"),(0,o.kt)("li",{parentName:"ol"},"MDK-ARM")),(0,o.kt)(r.Z,{mdxType:"FurtherReading"},"Please read the section in the ",(0,o.kt)(c.Z,{to:"../../touchgfx-hal-development/generator-how-to/touchgfx-al-configuration/video-decoding",mdxType:"Link"},"Generator User Guide"),"  on configuring a project for Video Decoding."),(0,o.kt)("p",null,"\ub2e4\uc74c \uc608\uc81c\ub294 \ubaa8\ub450 STM32F746G-DISCO \ubcf4\ub4dc\uc5d0\uc11c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc8fc\uc18c(\uc608: ",(0,o.kt)("inlineCode",{parentName:"p"},"0xC0000000"),")\ub85c \ud504\ub808\uc784 \ubc84\ud37c\ub97c \ucc38\uc870\ud560 \uc218 \uc788\ub3c4\ub85d SDRAM \uc2dc\uc791 \uc704\uce58\uc5d0 \uc77c\ubd80 \uacf5\uac04(",(0,o.kt)("inlineCode",{parentName:"p"},"0xC0000000"),"->",(0,o.kt)("inlineCode",{parentName:"p"},"0xC00FF000"),")\uc744 \ub0a8\uaca8\ub450\uc5b4 \ub9c1\ucee4\uac00 \ud504\ub808\uc784 \ubc84\ud37c \ub370\uc774\ud130\ub97c \ub36e\uc5b4\uc4f8 \uc704\ud5d8\uc774 \uc5c6\uc2b5\ub2c8\ub2e4. \uac01 \uc608\uc81c\ub9c8\ub2e4 \ub9c1\ucee4\uac00 ",(0,o.kt)("inlineCode",{parentName:"p"},"Video_RGB_Buffer"),"\ub97c \uc815\uc758\ub41c SDRAM \uc601\uc5ed\uc5d0 \uc800\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,o.kt)(s.Z,{mdxType:"Tip"},"\uc9c1\uc811 \uc8fc\uc18c\ub97c \uc9c0\uc815\ud558\uc9c0 \uc54a\uace0 Touchgfx \ud504\ub808\uc784 \ubc84\ud37c\ub97c \ud560\ub2f9\ud55c\ub2e4\uba74 \ub9c1\ucee4 \uc2a4\ud06c\ub9bd\ud2b8\uc5d0\uc11c ",(0,o.kt)("b",null,"TouchGFX_Framebuffer"),"\ub3c4 SDRAM\uc5d0 \uc800\uc7a5\ud574\uc57c \ud569\ub2c8\ub2e4."),(0,o.kt)("h3",k({},{id:"ewarm-iar"}),"EWARM (IAR)"),(0,o.kt)(l.Z,{mdxType:"CodeHeader"},"stm32f746xx_flash.icf"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{}),"define symbol __ICFEDIT_region_SDRAM_start__   = 0xC00FF000;\ndefine symbol __ICFEDIT_region_SDRAM_end__     = 0xC0700FFF;\n\ndefine region SDRAM_region    = mem:[from __ICFEDIT_region_SDRAM_start__ to __ICFEDIT_region_SDRAM_end__];\n\nplace in SDRAM_region    { first section Video_RGB_Buffer };\n")),(0,o.kt)("p",null,"\uc5f0\uacb0\uc744 \ub9c8\uce58\uba74 ",(0,o.kt)("inlineCode",{parentName:"p"},"EWARM\\STM32F746G_DISCO\\List\\STM32F746G_DISCO.map"),"\uc5d0 \ub2e4\uc74c\uacfc \uac19\uc774 ",(0,o.kt)("inlineCode",{parentName:"p"},"Video_RGB_Buffer")," \uc800\uc7a5 \uc815\ubcf4\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4."),(0,o.kt)(l.Z,{mdxType:"CodeHeader"},"STM32F746G_DISCO.map"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{}),"Video_RGB_Buffer        zero     0xc00f'f000   0x3'8400  TouchGFXGeneratedHAL.o [2]\n                               - 0xc013'7400   0x3'8400\n")),(0,o.kt)("h3",k({},{id:"stm32cubeide"}),"STM32CubeIDE"),(0,o.kt)(l.Z,{mdxType:"CodeHeader"},"STM32F746NGHX_FLASH.ld"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{}),"MEMORY\n{\n  ...\n  SDRAM      (xrw)    : ORIGIN = 0xC00FF000,   LENGTH = 8M\n}\n\nBufferSection (NOLOAD) :\n{\n  *(Video_RGB_Buffer Video_RGB_Buffer.*)\n  *(.gnu.linkonce.r.*)\n  . = ALIGN(0x4);\n} >SDRAM\n\n")),(0,o.kt)("p",null,"\ucef4\ud30c\uc77c\uc744 \ub9c8\uce58\uba74 ",(0,o.kt)("inlineCode",{parentName:"p"},"STM32CubeIDE\\Debug\\STM32F746G_DISCO.map"),"\uc5d0 \ub2e4\uc74c\uacfc \uac19\uc774 ",(0,o.kt)("inlineCode",{parentName:"p"},"Video_RGB_Buffer")," \uc800\uc7a5 \uc815\ubcf4\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4."),(0,o.kt)(l.Z,{mdxType:"CodeHeader"},"STM32F746G_DISCO.map"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{}),"BufferSection   0x00000000c00ff000    0x1c200\n *(Video_RGB_Buffer Video_RGB_Buffer.*)\n Video_RGB_Buffer\n                0x00000000c00ff000    0x1c200 Application/User/TouchGFX/target/generated/TouchGFXGeneratedHAL.o\n                0x00000000c00ff000                videoRGBBuffer\n")),(0,o.kt)("h3",k({},{id:"mdk-arm-keil"}),"MDK-ARM (Keil)"),(0,o.kt)(l.Z,{mdxType:"CodeHeader"},"STM32F746G_DISCO.sct"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{}),"LR_IROM1 0x08000000 0x00200000  {    ; load region size_region\n  ER_IROM1 0x08000000 0x00200000  {  ; load address = execution address\n    *.o (RESET, +First)\n    *(InRoot$$Sections)\n    .ANY (+RO)\n  }\n  RW_IRAM1 0x20000000 0x00050000  {  ; RW data\n    .ANY (+RW +ZI)\n  }\n  RW_SDRAM 0xC00FF000 UNINIT 0xC0700FFF  {\n    *.o (Video_RGB_Buffer)\n  }\n}\n")),(0,o.kt)("p",null,"Make sure to include the ",(0,o.kt)("inlineCode",{parentName:"p"},"UNINIT")," attribute in the section that holds the Video Buffer. This ensures leaving the memory region as uninitialized data. \uc5f0\uacb0\uc744 \ub9c8\uce58\uba74 ",(0,o.kt)("inlineCode",{parentName:"p"},"MDK-ARM\\STM32F746G_DISCO\\STM32F746G_DISCO.map"),"\uc5d0 \ub2e4\uc74c\uacfc \uac19\uc774 ",(0,o.kt)("inlineCode",{parentName:"p"},"Video_RGB_Buffer")," \uc800\uc7a5 \uc815\ubcf4\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4."),(0,o.kt)(l.Z,{mdxType:"CodeHeader"},"STM32F746G_DISCO.map"),(0,o.kt)("pre",null,(0,o.kt)("code",k({parentName:"pre"},{}),"Video_RGB_Buffer                         0xc00ff000   Section    115200  touchgfxgeneratedhal.o(Video_RGB_Buffer)\n")))}$.isMDXComponent=!0}}]);