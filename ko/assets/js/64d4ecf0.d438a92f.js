"use strict";(self.webpackChunktouchgfx_documentation=self.webpackChunktouchgfx_documentation||[]).push([[8241],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return s}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),o=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=o(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),d=o(n),s=r,g=d["".concat(c,".").concat(s)]||d[s]||u[s]||i;return n?a.createElement(g,l(l({ref:t},m),{},{components:n})):a.createElement(g,l({ref:t},m))}));function s(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:r,l[1]=p;for(var o=2;o<i;o++)l[o]=n[o];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},22425:function(e,t,n){var a=n(67294);class r extends a.Component{render(){return a.createElement("div",{className:"code-header"},a.createElement("div",null,a.createElement("h5",null,this.props.children)))}}t.Z=r},44035:function(e,t,n){var a=n(67294),r=n(25026);t.Z=function(e){const t=e.noShadow||!1,n=e.width,i=e.height,l=(0,r.Z)(e.imageSource);return t?a.createElement("div",{className:"figure noshadow"},a.createElement("a",{href:l,target:"_blank"},a.createElement("img",{width:n,height:i,src:l})),a.createElement("p",null,e.children)):a.createElement("div",{className:"figure"},a.createElement("a",{href:l,target:"_blank"},a.createElement("img",{width:n,height:i,src:l})),a.createElement("p",null,e.children))}},79866:function(e,t,n){n.r(t),n.d(t,{assets:function(){return b},contentTitle:function(){return y},default:function(){return h},frontMatter:function(){return g},metadata:function(){return f},toc:function(){return k}});var a=n(3905),r=n(44035),i=n(22425),l=Object.defineProperty,p=Object.defineProperties,c=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,m=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,d=(e,t,n)=>t in e?l(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,s=(e,t)=>{for(var n in t||(t={}))m.call(t,n)&&d(e,n,t[n]);if(o)for(var n of o(t))u.call(t,n)&&d(e,n,t[n]);return e};const g={id:"creating-dynamic-l8-images",title:"\ub3d9\uc801 L8 \uc774\ubbf8\uc9c0 \uc0dd\uc131"},y=void 0,f={unversionedId:"development/ui-development/scenarios/creating-dynamic-l8-images",id:"development/ui-development/scenarios/creating-dynamic-l8-images",title:"\ub3d9\uc801 L8 \uc774\ubbf8\uc9c0 \uc0dd\uc131",description:"",source:"@site/i18n/ko/docusaurus-plugin-content-docs/current/development/ui-development/scenarios/creating-dynamic-l8-images.mdx",sourceDirName:"development/ui-development/scenarios",slug:"/development/ui-development/scenarios/creating-dynamic-l8-images",permalink:"/4.21/ko/docs/development/ui-development/scenarios/creating-dynamic-l8-images",draft:!1,tags:[],version:"current",frontMatter:{id:"creating-dynamic-l8-images",title:"\ub3d9\uc801 L8 \uc774\ubbf8\uc9c0 \uc0dd\uc131"},sidebar:"docs",previous:{title:"L8 \uc774\ubbf8\uc9c0 \ud615\uc2dd\uc744 \ud1b5\ud55c \uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub7c9 \uc808\uac10",permalink:"/4.21/ko/docs/development/ui-development/scenarios/using-the-l8-image-format-to-reduce-memory-consumption"},next:{title:"Scenarios",permalink:"/4.21/ko/docs/category/scenarios-2"}},b={},k=[{value:"\ub3d9\uc801 L8 \uc774\ubbf8\uc9c0",id:"dynamic-l8-images",level:2},{value:"24\ube44\ud2b8 \ud314\ub808\ud2b8\ub97c \uc0ac\uc6a9\ud55c \ub3d9\uc801 L8 \uc774\ubbf8\uc9c0 \uc0dd\uc131",id:"creating-a-dynamic-l8-image-with-24-bit-palette",level:3},{value:"\ud314\ub808\ud2b8 \uc561\uc138\uc2a4",id:"accessing-the-palette",level:3},{value:"\ub3d9\uc801 L8 \ube44\ud2b8\ub9f5 \uc608\uc2dc",id:"dynamic-l8-bitmap-example",level:2},{value:"\ud314\ub808\ud2b8 \uc870\uc791",id:"manipulating-the-palette",level:3}],v={toc:k};function h(e){var t,n=e,{components:l}=n,d=((e,t)=>{var n={};for(var a in e)m.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&o)for(var a of o(e))t.indexOf(a)<0&&u.call(e,a)&&(n[a]=e[a]);return n})(n,["components"]);return(0,a.kt)("wrapper",(t=s(s({},v),d),p(t,c({components:l,mdxType:"MDXLayout"}))),(0,a.kt)("p",null,"\uc774 \uc139\uc158\uc5d0\uc11c\ub294 \ub3d9\uc801 L8 \uc774\ubbf8\uc9c0\uc758 \uc0ac\uc6a9 \ubc29\ubc95\uacfc \ub354\ubd88\uc5b4 \ud314\ub808\ud2b8 \uc0dd\uc131 \ubc29\ubc95\uc744 \uc911\uc810\uc801\uc73c\ub85c \uc124\uba85\ud558\uaca0\uc2b5\ub2c8\ub2e4."),(0,a.kt)("p",null,(0,a.kt)("a",s({parentName:"p"},{href:"../touchgfx-engine-features/dynamic-bitmaps"}),"\ub3d9\uc801 \ube44\ud2b8\ub9f5"),"\uacfc ",(0,a.kt)("a",s({parentName:"p"},{href:"using-the-l8-image-format-to-reduce-memory-consumption"}),"L8 \uc774\ubbf8\uc9c0 \ud615\uc2dd"),"\uc5d0 \ub300\ud55c \uc77c\ubc18 \uc815\ubcf4\ub97c \uc77d\uc5b4\ubcf4\uc2ed\uc2dc\uc624."),(0,a.kt)("h2",s({},{id:"dynamic-l8-images"}),"\ub3d9\uc801 L8 \uc774\ubbf8\uc9c0"),(0,a.kt)("p",null,"\ub3d9\uc801 L8 \ube44\ud2b8\ub9f5\uc744 \uc0dd\uc131\ud558\ub294 \ubc29\ubc95\uc740 \ub2e4\ub978 \ub3d9\uc801 \ube44\ud2b8\ub9f5\uacfc \ube44\uc2b7\ud558\uc9c0\ub9cc \ube44\ud2b8\ub9f5\uc5d0 \uc0dd\uc131\ud560 \ud314\ub808\ud2b8\uc758 \uc720\ud615\uc744 \uc9c0\uc815\ud574\uc57c \ud55c\ub2e4\ub294 \uc810\uc774 \ub2e4\ub985\ub2c8\ub2e4."),(0,a.kt)("p",null,"TouchGFX\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 3\uac00\uc9c0 \uc720\ud615\uc758 \ud314\ub808\ud2b8\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",s({parentName:"tr"},{align:null}),(0,a.kt)("strong",{parentName:"th"},"\ud314\ub808\ud2b8")),(0,a.kt)("th",s({parentName:"tr"},{align:null}),(0,a.kt)("strong",{parentName:"th"},"\uc124\uba85")))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),"CLUT_FORMAT_L8_ARGB8888"),(0,a.kt)("td",s({parentName:"tr"},{align:null}),"32\ube44\ud2b8(\ube68\uac04\uc0c9, \ub179\uc0c9, \ud30c\ub780\uc0c9, \ud53d\uc140 \ub2e8\uc704 \uc54c\ud30c \ucc44\ub110\uc5d0 \uac01\uac01 8\ube44\ud2b8)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),"CLUT_FORMAT_L8_RGB888"),(0,a.kt)("td",s({parentName:"tr"},{align:null}),"24\ube44\ud2b8(\ube68\uac04\uc0c9, \ub179\uc0c9, \ud30c\ub780\uc0c9\uc5d0 \uac01\uac01 8\ube44\ud2b8, \ud53d\uc140 \ub2e8\uc704 \uc54c\ud30c \ucc44\ub110 \uc5c6\uc74c)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",s({parentName:"tr"},{align:null}),"CLUT_FORMAT_L8_RGB565"),(0,a.kt)("td",s({parentName:"tr"},{align:null}),"16\ube44\ud2b8(\ube68\uac04\uc0c9\uc5d0 5\ube44\ud2b8, \ub179\uc0c9\uc5d0 6\ube44\ud2b8, \ud30c\ub780\uc0c9\uc5d0 5\ube44\ud2b8, \ud53d\uc140 \ub2e8\uc704 \uc54c\ud30c \ucc44\ub110 \uc5c6\uc74c)")))),(0,a.kt)("h3",s({},{id:"creating-a-dynamic-l8-image-with-24-bit-palette"}),"24\ube44\ud2b8 \ud314\ub808\ud2b8\ub97c \uc0ac\uc6a9\ud55c \ub3d9\uc801 L8 \uc774\ubbf8\uc9c0 \uc0dd\uc131"),(0,a.kt)("p",null,"\uc5ec\uae30\uc11c\ub294 24\ube44\ud2b8 \ud314\ub808\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc5ec 100 x100 \ud53d\uc140 L8 \ube44\ud2b8\ub9f5\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4."),(0,a.kt)(i.Z,{mdxType:"CodeHeader"},"Screen1View.cpp"),(0,a.kt)("pre",null,(0,a.kt)("code",s({parentName:"pre"},{className:"language-cpp"}),"BitmapId dynamicBitmap1 = Bitmap::dynamicBitmapCreateL8(100, 100, Bitmap::CLUT_FORMAT_L8_RGB888, 256);\n")),(0,a.kt)("p",null,"\uc704 \ud638\ucd9c\ub85c 100 x100 L8 \ube44\ud2b8\ub9f5\uacfc 24\ube44\ud2b8 \ud314\ub808\ud2b8\uac00 \ube44\ud2b8\ub9f5 \uce90\uc2dc\uc5d0 \ud560\ub2f9\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc774 \ud314\ub808\ud2b8\ub294 \ub3d9\uc801 \ube44\ud2b8\ub9f5\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc0c9\uc0c1\uc774 256\uac00\uc9c0\uc774\uc9c0\ub9cc \uc774 \uc218\uce58\ub97c \uc6d0\ud558\ub294 \ud06c\uae30\ub85c \uc870\uc815\ud558\uc5ec \uba54\ubaa8\ub9ac \ub0ad\ube44\ub97c \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,a.kt)("h3",s({},{id:"accessing-the-palette"}),"\ud314\ub808\ud2b8 \uc561\uc138\uc2a4"),(0,a.kt)("p",null,"\ud53d\uc140 \ubc14\ub85c \ub4a4\uc5d0(\uccab \ubc88\uc9f8 32\ube44\ud2b8 \uc8fc\uc18c\uc5d0\uc11c) L8 \ud314\ub808\ud2b8 \ud615\uc2dd\uc744 \ub098\ud0c0\ub0b4\ub294 2\ubc14\uc774\ud2b8(\uc800\uc7a5\ub41c \ub9ac\ud2c0 \uc5d4\ub514\uc548), \ud314\ub808\ud2b8\uc758 \ud615\uc2dd \uc218\ub97c \ub098\ud0c0\ub0b4\ub294 2\ubc14\uc774\ud2b8(\uc800\uc7a5\ub41c \ub9ac\ud2c0 \uc5d4\ub514\uc548), \uadf8\ub9ac\uace0 \uc2e4\uc81c \ud314\ub808\ud2b8 \uc0c9\uc0c1\uc774 \uc21c\uc11c\ub300\ub85c \ud45c\uc2dc\ub429\ub2c8\ub2e4. \ub530\ub77c\uc11c \ud314\ub808\ud2b8 \uc0c9\uc0c1\uc740 \ud53d\uc140\uc5d0\uc11c 4\ubc14\uc774\ud2b8 \ub5a8\uc5b4\uc838 \uc788\uc2b5\ub2c8\ub2e4(32\ube44\ud2b8 \uc815\ub82c)."),(0,a.kt)("p",null,"\ub2e4\uc74c\uacfc \uac19\uc774 (\uc544\uc9c1 \ucd08\uae30\ud654\ub418\uc9c0 \uc54a\uc740) \ud314\ub808\ud2b8\uc5d0 \ub300\ud55c \ud3ec\uc778\ud130\ub97c \uac00\uc838\uc62c \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,a.kt)(i.Z,{mdxType:"CodeHeader"},"Screen1View.cpp"),(0,a.kt)("pre",null,(0,a.kt)("code",s({parentName:"pre"},{className:"language-cpp"}),"//Get a pointer to the bitmap data (pixels and palette)\nuint8_t* data = Bitmap::dynamicBitmapGetAddress(dynamicBitmap1);\n\n//1 byte pr pixel, round up to 32-bit\nuint32_t byteSize = 100*100;\nbyteSize = ((byteSize + 3) & ~3);\n\n//Palette size is saved in byte 2 and 3\nint palSize = (data[3] << 8) | data[2];\n\n//Palette starts four bytes after the pixels\nuint8_t* pal = (data + byteSize + 4);\n")),(0,a.kt)("h2",s({},{id:"dynamic-l8-bitmap-example"}),"\ub3d9\uc801 L8 \ube44\ud2b8\ub9f5 \uc608\uc2dc"),(0,a.kt)("p",null,"\uc774\uc81c \uc608\ub97c \ud1b5\ud574\uc11c \ub3d9\uc801 L8 \ube44\ud2b8\ub9f5\uc744 \uc0dd\uc131\ud558\uace0 \ud314\ub808\ud2b8\ub97c \uc870\uc791\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574 \uc54c\uc544\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \ud314\ub808\ud2b8 \uc870\uc791\uc740 \uc77c\ubc18 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \ud754\ud55c \uc791\uc5c5\uc774 \uc544\ub2d9\ub2c8\ub2e4. \uc774 \uc608\uc2dc\ub294 \ud314\ub808\ud2b8\uc5d0 \uc561\uc138\uc2a4\ud558\uc5ec \uc0dd\uc131\ud558\ub294 \ubc29\ubc95\uc744 \uc124\uba85\ud558\uae30 \uc704\ud574\uc11c\uc785\ub2c8\ub2e4."),(0,a.kt)("p",null,"\uba3c\uc800 TouchGFX Designer\uc5d0\uc11c \uc2a4\ud06c\ub9b0\uc744 \uc0dd\uc131\ud558\uc5ec \ub2e4\uc74c\uacfc \uac19\uc774 \ubc30\uacbd\uc5d0 \ud770\uc0c9 Box\ub97c, \uadf8\ub9ac\uace0 \uc6d0\ud558\ub294 \uc704\uce58(\uc608: x=140, y=8)\uc5d0 \uc774\ubbf8\uc9c0\ub97c \uc0bd\uc785\ud569\ub2c8\ub2e4."),(0,a.kt)(r.Z,{imageSource:"/img/development/ui-development/scenarios/creating-dynamic-l8-images/designer-img-4.17.webp",mdxType:"Figure"},"\uc2a4\ud06c\ub9b0 \uc0dd\uc131"),(0,a.kt)("p",null,"\uc774\uc81c \ucf54\ub4dc\ub97c \uc0dd\uc131\ud558\uace0 Screen1View.cpp \ud30c\uc77c\uc744 \uc5fd\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c \ucf54\ub4dc\ub97c ",(0,a.kt)("em",{parentName:"p"},"setupScreen"),"\uc5d0 \uc0bd\uc785\ud558\uc5ec \ube44\ud2b8\ub9f5 \uce90\uc2dc\ub97c \ucd08\uae30\ud654\ud558\uace0 \ub3d9\uc801 \ube44\ud2b8\ub9f5\uc744 \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4."),(0,a.kt)("p",null,"200*256 \ud53d\uc140\uc758 \ube44\ud2b8\ub9f5\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. \uc774\ub54c L8 \ube44\ud2b8\ub9f5\uc5d0\uc11c \uac01 \ud53d\uc140\uc740 1\ubc14\uc774\ud2b8\uc785\ub2c8\ub2e4. \uc774\ubbf8\uc9c0\uc758 \uac01 \ud589\uc744 \ub2e4\ub978 \uc0c9\uc0c1\uc73c\ub85c \ucc44\uc0c9\ud569\ub2c8\ub2e4. \ub530\ub77c\uc11c \uccab \ud589\uc740 \uc0c9\uc0c1\uc774 0\uc774\uace0, \ub9c8\uc9c0\ub9c9 \ud589\uc740 \uc0c9\uc0c1\uc774 255\uc785\ub2c8\ub2e4."),(0,a.kt)("p",null,"\uadf8\ub7f0 \ub2e4\uc74c \ud314\ub808\ud2b8\uc5d0\uc11c \uc0c9\uc0c1\uc744 \ucd08\uae30\ud654\ud569\ub2c8\ub2e4. \ud314\ub808\ud2b8\uc758 \uc2dc\uc791 \uc8fc\uc18c\ub97c \uacc4\uc0b0\ud558\uace0 256\uac00\uc9c0 \uc0c9\uc0c1\uc758 RGB \uac12\uc744 \uc124\uc815\ud569\ub2c8\ub2e4. \uc774\ub54c \ucd08\ub85d\uc0c9\uc5d0\uc11c \ube68\uac04\uc0c9\uc73c\ub85c, \ub2e4\uc2dc \ube68\uac04\uc0c9\uc5d0\uc11c \ucd08\ub85d\uc0c9\uc73c\ub85c \uc0c9\uc0c1\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4."),(0,a.kt)(i.Z,{mdxType:"CodeHeader"},"Screen1View.cpp"),(0,a.kt)("pre",null,(0,a.kt)("code",s({parentName:"pre"},{className:"language-cpp"}),'#ifdef SIMULATOR\nuint32_t cacheBuffer[320*1024/4]; //simulate PSRAM\nuint16_t* psram = (uint16_t*)cacheBuffer;\n#else\nuint16_t* psram = (uint16_t*)(0xd0000000 + 480*272*2*2); //Address after two 16bit framebuffers\n#endif\n\nScreen1View::Screen1View()\n{\n}\n\nvoid Screen1View::setupScreen()\n{\n    Screen1ViewBase::setupScreen();\n\n    //Create one dynamic bitmap\n    Bitmap::setCache(psram, 320*1024, 1); //320Kb cache\n    const uint16_t palSize = 256;\n    BitmapId dynamicBitmap1 = Bitmap::dynamicBitmapCreateL8(200, 256, Bitmap::CLUT_FORMAT_L8_RGB888, palSize);\n    imageDynamic.setBitmap(Bitmap(dynamicBitmap1));\n\n    if (dynamicBitmap1 == BITMAP_INVALID)\n    {\n        touchgfx_printf("Unable to create dynamic bitmap\\n");\n    }\n    else\n    {\n        uint8_t* data = Bitmap::dynamicBitmapGetAddress(dynamicBitmap1);\n\n        uint8_t* pixel = data;\n        //make colored rows\n        for (int y = 0; y<256; y++)\n        {\n            for (int x = 0; x<200; x++)\n            {\n                *pixel++ = y;\n            }\n        }\n\n        uint32_t byteSize = 200*256;\n        byteSize = ((byteSize + 3) & ~3);\n\n        //Palette starts four bytes after the pixels\n        uint8_t* pal = (data + byteSize + 4);\n\n        //Make palette with 256 colors from green to red to green\n        for (int i = 0; i < palSize; i++)\n        {\n            //BGR\n            pal[i * 3 + 0] = 0x00;\n            pal[i * 3 + 1] = 127 * (1 + cosf(i * 6.28f / (palSize - 1)));\n            pal[i * 3 + 2] = 255 * (sinf(i * 3.14f / (palSize - 1)));\n        }\n    }\n}\n')),(0,a.kt)("p",null,"\uc704 \uc791\uc5c5\uc744 \ub9c8\uce58\uba74 \uc2a4\ud06c\ub9b0\uc5d0 \ub2e4\uc74c\uacfc \uac19\uc774 \ud45c\uc2dc\ub429\ub2c8\ub2e4."),(0,a.kt)(r.Z,{imageSource:"/img/development/ui-development/scenarios/creating-dynamic-l8-images/img-20200225-151937.bmp",mdxType:"Figure"},"L8 \uc774\ubbf8\uc9c0 \ud45c\uc2dc"),(0,a.kt)("h3",s({},{id:"manipulating-the-palette"}),"\ud314\ub808\ud2b8 \uc870\uc791"),(0,a.kt)("p",null,"\ub3d9\uc801 L8 \ube44\ud2b8\ub9f5\uc5d0 \uc0ac\uc6a9\ud560 \ud314\ub808\ud2b8\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0 \uc870\uc791\ub3c4 \uc27d\uc2b5\ub2c8\ub2e4."),(0,a.kt)("p",null,"\uc5ec\uae30\uc11c\ub294 \uc778\ub371\uc2a4 \ud558\ub098\uc529 \uc544\ub798\ub85c \uc0c9\uc0c1\uc744 \uc21c\ud658\uc2dc\ucf1c \ubaa8\ub4e0 \ud504\ub808\uc784\uc5d0\uc11c \uc774\ubbf8\uc9c0\ub97c \uac15\uc81c\ub85c \ub2e4\uc2dc \ub4dc\ub85c\uc789\ud569\ub2c8\ub2e4."),(0,a.kt)(i.Z,{mdxType:"CodeHeader"},"Screen1View.cpp"),(0,a.kt)("pre",null,(0,a.kt)("code",s({parentName:"pre"},{className:"language-cpp"}),"...\nvoid Screen1View::handleTickEvent()\n{\n    //get palette address\n    uint8_t* data = Bitmap::dynamicBitmapGetAddress(imageDynamic.getBitmap());\n    uint32_t byteSize = 200*256;\n    byteSize = ((byteSize + 3) & ~3);\n    const int palSize = (data[3] << 8) | data[2];\n    uint8_t* pal = (data + byteSize + 4);\n\n    //Cycle palette, copy color 0\n    int8_t blue = pal[0], green = pal[1], red = pal[2];\n\n    //Move palette down, 1->0, 2->1, ...\n    for (int i = 3; i < palSize * 3; i++)\n    {\n        pal[i - 3] = pal[i];\n    }\n\n    //Insert color 0 as color 255\n    pal[(palSize - 1) * 3 + 0] = blue;\n    pal[(palSize - 1) * 3 + 1] = green;\n    pal[(palSize - 1) * 3 + 2] = red;\n\n    //Force redraw by invalidating\n    imageDynamic.invalidate();\n}\n")),(0,a.kt)("p",null,"\uadf8\ub7ec\uba74 \ub3d9\uc801 \ube44\ud2b8\ub9f5\uc5d0\uc11c \uc0c9\uc0c1\uc774 \u201c\uc704\ub85c\u201d \uc774\ub3d9\ud569\ub2c8\ub2e4."),(0,a.kt)(r.Z,{width:"200",imageSource:"/img/development/ui-development/scenarios/creating-dynamic-l8-images/demo.webp",mdxType:"Figure"},"L8 \ud314\ub808\ud2b8\uc758 \uc21c\ud658"))}h.isMDXComponent=!0}}]);